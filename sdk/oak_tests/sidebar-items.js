initSidebarItems({"fn":[["add_port_name","Test helper to add a port name referring to a handle."],["channel_close","Test-only version of channel closure."],["channel_create","Test-only version of channel creation."],["channel_find","Test-only placeholder for finding a channel by preconfigured port name."],["channel_read","Test-only implementation of channel read functionality, which reads a message from the test channel."],["channel_write","Test-only implementation of channel write functionality."],["grpc_channel_setup","Test helper to set up a channel into a Node under for injected gRPC requests."],["grpc_channel_setup_default","Test helper to set up a channel into the Node under for injected gRPC requests, using default parameters (node \"app\" port \"grpc_in\")."],["init_logging","Test helper to initialize logging via simple_logger."],["inject_grpc_request","Test helper to inject a (single) gRPC request message to the Node under test, and collect a (single) response."],["last_message_as_string","Convenience test helper which returns the last message on a channel as a string (without removing it from the channel)."],["node_create","Test framework implementation of dynamic Node creation."],["oak_main",""],["random_get","Test-only placeholder for random data generation."],["reset","Test helper that clears any handle to channel half mappings."],["set_read_status","Test helper that injects a failure for future channel read operations."],["set_termination_pending","Test helper to mark the Application under test as pending termination."],["set_write_status","Test helper that injects a failure for future channel write operations."],["start","Start running the Application under test, with the given initial Node and channel configuration.  Because multiple Nodes are linked into the same test, the Nodes should be configured not to define the global extern \"C\" oak_main(), as this would lead to duplicate symbols.  Instead, the entrypoints map should provide a function pointer for each WasmContents entry in the configuration."],["start_node","Start running a test of a single-Node Application.  This assumes that the single Node's main entrypoint is available as a global extern \"C\" oak_main(), as for a live version of the Application."],["stop","Stop the running Application under test."],["wait_on_channels","Test-only implementation of channel wait functionality, which always indicates that all provided channels are ready for reading."]],"mod":[["proto","Auto-generated code for processing protocol buffer message definitions and gRPC service definitions."]],"static":[["DEFAULT_NODE_NAME",""]],"type":[["NodeMain","Expected type for the main entrypoint to a Node under test."]]});
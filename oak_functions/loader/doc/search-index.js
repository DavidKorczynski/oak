var searchIndex = JSON.parse('{\
"oak_functions_loader":{"doc":"","i":[[3,"Opt","oak_functions_loader","Command line options for the Oak loader.",null,null],[12,"http_listen_port","","",0,null],[12,"wasm_path","","",0,null],[12,"lookup_data_path","","",0,null],[3,"LookupData","","",null,null],[12,"lookup_data_path","","",1,null],[12,"entries","","",1,null],[5,"load_lookup_entries","","",null,[[["buf",8]],[["result",6],["hashmap",3]]]],[5,"main","","Main execution point for the Oak Functions Loader.",null,[[],["result",6]]],[0,"server","","",null,null],[3,"WasmHandler","oak_functions_loader::server","",null,null],[12,"module","","",2,null],[3,"WasmState","","Encapsulates the state of a Wasm invocation for a single…",null,null],[12,"instance","","",3,null],[12,"memory","","",3,null],[12,"request_bytes","","",3,null],[12,"response_bytes","","",3,null],[5,"create_and_start_server","","Starts an HTTP server on the given address, serving the…",null,[[["receiver",3]]]],[17,"MAIN_FUNCTION_NAME","","",null,null],[11,"new","","",3,[[["vec",3],["module",3]],[["result",6],["wasmstate",3]]]],[11,"invoke","","",3,[[]]],[11,"create","","",2,[[],["result",6]]],[11,"handle_request","","",2,[[["body",3],["request",3]]]],[11,"handle_invoke","","",2,[[["body",3],["request",3]]]],[0,"proto","oak_functions_loader","",null,null],[3,"Entry","oak_functions_loader::proto","An individual entry to be made available for lookup to an…",null,null],[12,"key","","",4,null],[12,"value","","",4,null],[11,"new_empty","oak_functions_loader","Creates a new [`LookupData`] instance that can refresh its…",1,[[],["lookupdata",3]]],[11,"refresh","","Refreshes the internal entries of this struct from the…",1,[[],["result",6]]],[11,"get","","Convenience getter for an individual entry that reduces…",1,[[],[["vec",3],["option",4]]]],[11,"len","","",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",0,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_any_arc","","",1,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",1,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"from","oak_functions_loader::server","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_any_arc","","",2,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",2,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_any","","",3,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"from","oak_functions_loader::proto","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_any_arc","","",4,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",4,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"clone","oak_functions_loader::server","",2,[[],["wasmhandler",3]]],[11,"clone","oak_functions_loader::proto","",4,[[],["entry",3]]],[11,"clone","oak_functions_loader","",0,[[],["opt",3]]],[11,"default","oak_functions_loader::proto","",4,[[]]],[11,"eq","","",4,[[["entry",3]]]],[11,"ne","","",4,[[["entry",3]]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","oak_functions_loader","",0,[[["formatter",3]],["result",6]]],[11,"encode_raw","oak_functions_loader::proto","",4,[[]]],[11,"merge_field","","",4,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",4,[[]]],[11,"clear","","",4,[[]]],[11,"clap","oak_functions_loader","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[]]]],"p":[[3,"Opt"],[3,"LookupData"],[3,"WasmHandler"],[3,"WasmState"],[3,"Entry"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);
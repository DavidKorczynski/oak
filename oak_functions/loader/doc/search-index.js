var searchIndex = JSON.parse('{\
"oak_functions_loader":{"doc":"","t":[0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,4,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,16,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,17,6,6,6,6,8,8,3,3,3,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,5,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["attestation","grpc","logger","lookup","proto","server","AttestationServer","as_any","as_any_mut","borrow","borrow_mut","create","from","into","into_any","into_any_arc","into_any_rc","into_request","stream","try_from","try_into","type_id","vzip","create_and_start_grpc_server","create_wasm_handler","Logger","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","for_test","from","into","into_any","into_any_arc","into_any_rc","into_request","log_public","log_sensitive","new","to_owned","try_from","try_into","type_id","vzip","File","GcpMetadataToken","Http","LookupData","LookupDataAuth","LookupDataSource","None","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","fmt","fmt","for_test","from","from","from","get","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","is_empty","len","new_empty","parse_lookup_entries","refresh","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","auth","url","StreamingRequest","StreamingResponse","as_any","as_any","as_any_mut","as_any_mut","body","body","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encode_raw","encode_raw","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_request","into_request","merge_field","merge_field","ne","ne","streaming_session_server","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StreamStream","StreamingSession","StreamingSessionServer","as_any","as_any_mut","borrow","borrow_mut","call","call","clone","clone_into","fmt","from","into","into_any","into_any_arc","into_any_rc","into_request","new","poll_ready","poll_ready","stream","to_owned","try_from","try_into","type_id","vzip","with_interceptor","ABI_USIZE","AbiPointer","AbiPointerOffset","BoxedExtension","BoxedExtensionFactory","ExtensionFactory","OakApiNativeExtension","Policy","WasmHandler","WasmState","alloc","apply_policy","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","constant_processing_time","constant_response_size_bytes","create","create","deserialize","fmt","format_bytes","from","from","from","get_memory","get_metadata","handle_invoke","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","invoke","invoke_index","read_request","resolve_func","storage_get_item","terminate","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate","vzip","vzip","vzip","write_buffer_to_wasm_memory","write_log_message","write_response","write_u32_to_wasm_memory"],"q":["oak_functions_loader","","","","","","oak_functions_loader::attestation","","","","","","","","","","","","","","","","","oak_functions_loader::grpc","","oak_functions_loader::logger","","","","","","","","","","","","","","","","","","","","","","","oak_functions_loader::lookup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_loader::lookup::LookupDataSource","","","oak_functions_loader::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_loader::proto::streaming_session_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_loader::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","gRPC server for Oak Functions.","","","","","gRPC Attestation Service implementation.","","","","","","","","","","","","","","","","","Starts a gRPC server on the given address, serving the …","Creates a <code>WasmHandler</code> with the given Wasm module, lookup …","A simple logger that splits logging between writing logs …","","","","","","","","Creates a new logger for testing using the debug …","","","","","","","Logs a message that contains only public, non-sensitive …","Logs the message at the specified <code>Level</code>, but only if the …","Creates a new logger with the specified maximum …","","","","","","","","","An in-memory lookup store instance that can refresh its …","","","","","","","","","","","","","","","","","","","","","","","","Creates an instance of LookupData populated with the …","","","","Convenience getter for an individual entry that reduces …","","","","","","","","","","","","","","","","","","Creates a new empty <code>LookupData</code> instance that can refresh …","","Refreshes the internal entries of this struct from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated server implementations.","","","","","","","","","","","Server streaming response type for the Stream method.","Generated trait containing gRPC methods that should be …","","","","","","","","","","","","","","","","","","","","Creates a message stream for session key negotiation and …","","","","","","","Wasm type identifier for position/offset values in linear …","","","","","","Trait for implementing extensions, to implement new …","Similar to <code>ServerPolicy</code>, but it is used for reading the …","","<code>WasmState</code> holds runtime values for a particular execution …","","Runs the given function and applies the given security …","","","","","","","","","","","","","","","","","A fixed response time. See …","See <code>Policy::constant_response_size_bytes</code>","","","","","Converts a binary sequence to a string if it is a valid …","","","","Helper function to get memory.","Metadata about this Extension, including the exported …","","","","","","","","","","","","","","","","Similar to <code>invoke_index</code> in <code>wasmi::Externals</code>, but may …","Invocation of a host function specified by its registered …","Corresponds to the host ABI function <code>read_request</code>.","","Corresponds to the host ABI function <code>storage_get_item</code>.","Performs any cleanup or terminating behavior necessary …","","","","","","","","","","","","","","","","","Corresponds to the host ABI function <code>write_log_message</code>.","Corresponds to the host ABI function <code>write_response</code>.",""],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,4,3,0,0,0,4,5,4,3,5,4,3,5,4,3,5,4,3,4,3,4,3,4,4,4,3,5,5,4,3,5,5,4,3,5,4,3,5,4,3,5,4,3,5,4,3,5,5,5,0,5,4,3,5,4,3,5,4,3,5,4,3,5,4,3,6,7,7,0,0,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,9,0,8,9,8,9,8,9,8,9,8,9,10,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,12,0,12,13,14,12,13,14,12,13,14,12,13,14,13,14,13,14,13,13,15,14,13,13,0,12,13,14,12,16,14,12,13,14,12,13,14,13,14,12,13,14,12,13,14,16,12,12,12,12,16,13,14,12,13,14,12,13,14,12,13,14,13,12,13,14,12,12,12,12],"f":[null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["u8",15],["vec",3,["u8"]],["configurationinfo",3],["logger",3]],["result",6]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["any",8],["box",3,["any","global"]],["global",3]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["any",8],["rc",3,["any"]]]],[[],["request",3]],[[["request",3,["streaming"]],["streaming",3,["streamingrequest"]]],[["box",3,["future"]],["pin",3,["box"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["u8",15],["vec",3,["u8"]],["configurationinfo",3],["socketaddr",4],["logger",3],["serverpolicy",3],["wasmhandler",3],["future",8]]],[[["lookupdata",3],["boxedextensionfactory",6],["vec",3,["boxedextensionfactory"]],["arc",3,["lookupdata"]],["logger",3]],[["result",6,["wasmhandler"]],["wasmhandler",3]]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["logger",3]],[[]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["any",8],["box",3,["any","global"]],["global",3]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["any",8],["rc",3,["any"]]]],[[],["request",3]],[[["str",15],["level",4]]],[[["str",15],["level",4]]],[[["levelfilter",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["lookupdataauth",4]],[[],["lookupdatasource",4]],[[]],[[]],[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["hashmap",3,["vec","vec"]],["vec",3,["u8"]]]],[[]],[[]],[[]],[[],[["vec",3,["u8"]],["option",4,["vec"]]]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["any",8],["box",3,["any","global"]],["global",3]]],[[["global",3],["box",3,["global"]]],[["any",8],["box",3,["any","global"]],["global",3]]],[[["global",3],["box",3,["global"]]],[["any",8],["box",3,["any","global"]],["global",3]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["any",8],["rc",3,["any"]]]],[[["rc",3]],[["any",8],["rc",3,["any"]]]],[[["rc",3]],[["any",8],["rc",3,["any"]]]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["bool",15]],[[],["usize",15]],[[["option",4,["lookupdatasource"]],["logger",3],["lookupdatasource",4]],["lookupdata",3]],[[["buf",8]],[["hashmap",3,["vec","vec"]],["result",6,["hashmap"]]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["streamingrequest",3]],[[],["streamingresponse",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["streamingrequest",3]],["bool",15]],[[["streamingresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["any",8],["box",3,["any","global"]],["global",3]]],[[["global",3],["box",3,["global"]]],[["any",8],["box",3,["any","global"]],["global",3]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["any",8],["rc",3,["any"]]]],[[["rc",3]],[["any",8],["rc",3,["any"]]]],[[],["request",3]],[[],["request",3]],[[["wiretype",4],["u32",15],["decodecontext",3]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["wiretype",4],["u32",15],["decodecontext",3]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["streamingrequest",3]],["bool",15]],[[["streamingresponse",3]],["bool",15]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["request",3]]],[[["request",3]]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["any",8],["box",3,["any","global"]],["global",3]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["any",8],["rc",3,["any"]]]],[[],["request",3]],[[]],[[["context",3]],[["result",4],["poll",4,["result"]]]],[[["context",3]],[["result",4],["poll",4,["result"]]]],[[["request",3,["streaming"]],["streaming",3,["streamingrequest"]]],[["pin",3,["box"]],["box",3,["future"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["interceptedservice",3]],null,null,null,null,null,null,null,null,null,null,[[["u32",15]],["abipointer",6]],[[["serverpolicy",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["policy",3]],[[],["wasmhandler",3]],[[]],[[]],null,null,[[],[["boxedextension",6],["result",6,["boxedextension"]]]],[[["lookupdata",3],["boxedextensionfactory",6],["vec",3,["boxedextensionfactory"]],["arc",3,["lookupdata"]],["logger",3]],["result",6]],[[],["result",4]],[[["formatter",3]],["result",6]],[[],["string",3]],[[]],[[]],[[]],[[],["memoryref",3]],[[]],[[["request",3]]],[[]],[[]],[[]],[[["global",3],["box",3,["global"]]],[["any",8],["box",3,["any","global"]],["global",3]]],[[["global",3],["box",3,["global"]]],[["any",8],["box",3,["any","global"]],["global",3]]],[[["global",3],["box",3,["global"]]],[["any",8],["box",3,["any","global"]],["global",3]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["arc",3]],[["arc",3,["any"]],["any",8]]],[[["rc",3]],[["any",8],["rc",3,["any"]]]],[[["rc",3]],[["any",8],["rc",3,["any"]]]],[[["rc",3]],[["any",8],["rc",3,["any"]]]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["runtimeargs",3],["wasmstate",3]],[["result",4,["result","trap"]],["result",4,["oakstatus"]],["trap",3]]],[[["usize",15],["runtimeargs",3]],[["option",4,["runtimevalue"]],["trap",3],["result",4,["option","trap"]]]],[[["abipointer",6]],[["oakstatus",4],["result",4,["oakstatus"]]]],[[["str",15],["signature",3]],[["funcref",3],["error",4],["result",4,["funcref","error"]]]],[[["abipointer",6],["abipointeroffset",6]],[["oakstatus",4],["result",4,["oakstatus"]]]],[[],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["serverpolicy",3],["result",6,["serverpolicy"]]]],[[]],[[]],[[]],[[["abipointer",6]],[["oakstatus",4],["result",4,["oakstatus"]]]],[[["abipointer",6],["abipointeroffset",6]],[["oakstatus",4],["result",4,["oakstatus"]]]],[[["abipointer",6],["abipointeroffset",6]],[["oakstatus",4],["result",4,["oakstatus"]]]],[[["abipointer",6],["u32",15]],[["oakstatus",4],["result",4,["oakstatus"]]]]],"p":[[3,"AttestationServer"],[3,"Logger"],[4,"LookupDataSource"],[4,"LookupDataAuth"],[3,"LookupData"],[13,"File"],[13,"Http"],[3,"StreamingRequest"],[3,"StreamingResponse"],[8,"StreamingSession"],[3,"StreamingSessionServer"],[3,"WasmState"],[3,"Policy"],[3,"WasmHandler"],[8,"ExtensionFactory"],[8,"OakApiNativeExtension"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};
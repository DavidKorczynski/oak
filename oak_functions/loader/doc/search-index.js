var searchIndex = JSON.parse('{\
"oak_functions_loader":{"doc":"","i":[[0,"logger","oak_functions_loader","",null,null],[3,"Logger","oak_functions_loader::logger","A simple logger that splits logging between writing logs…",null,null],[11,"new","","Creates a new logger with the specified maximum…",0,[[["levelfilter",4]]]],[11,"for_test","","Creates a new logger for testing using the debug…",0,[[]]],[11,"log_sensitive","","Logs the message at the specified `Level`, but only if the…",0,[[["level",4]]]],[11,"log_public","","Logs a message that contains only public, non-sensitive…",0,[[["level",4]]]],[0,"server","oak_functions_loader","",null,null],[5,"create_and_start_server","oak_functions_loader::server","Starts an HTTP server on the given address, serving the…",null,[[["socketaddr",4],["logger",3],["receiver",3]]]],[11,"from","oak_functions_loader::logger","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",0,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"clone","","",0,[[],["logger",3]]],[11,"default","","",0,[[]]]],"p":[[3,"Logger"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);
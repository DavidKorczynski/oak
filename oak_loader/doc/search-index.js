var searchIndex = JSON.parse('{\
"oak_loader":{"doc":"A utility binary to run Oak Runtime.","t":[5,0,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,5,5,5,11,11,12,11,11,11,11,11,11,5,5,5,5,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,5,12,12,12,12,11,11,11,11,11,11,11,11,11,11],"n":["main","options","ConfigEntry","Opt","application","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clap","clone","clone","clone_into","clone_into","config_files","create_app_config","create_grpc_config","create_http_config","create_permissions_config","create_runtime_config","create_secure_server_config","create_sign_table","eq","equivalent","filename","fmt","fmt","from","from","from_clap","from_str","get_default_root_tls_certs","get_oidc_client_info","get_root_tls_certificate_or_default","get_tls_identity","grpc_tls_certificate","grpc_tls_private_key","http_tls_certificate","http_tls_private_key","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_request","into_request","introspect_port","key","kms_credentials","metrics_port","ne","no_introspect","no_metrics","oidc_client","parse_config_map","permissions","proxy_root_tls_certificate","proxy_uri","root_tls_certificate","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["oak_loader","","oak_loader::options","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Main execution point for the Oak loader.","Helper functions to parse input arguments and create an …","A specification of a configuration entry as human readable …","Command line options for the Oak loader.","","","","","","","","","","","","","","","","Parse application configuration into an instance of …","Create the overall <code>oak_runtime::GrpcConfiguration</code> from the …","Create the overall <code>oak_runtime::HttpConfiguration</code> from the …","Parse permissions configuration into an instance of …","Parse input options and create a <code>RuntimeConfiguration</code>.","Create <code>oak_runtime::SecureServerConfiguration</code> containing …","Create a signature table for Oak runtime. Returns an …","","","","","","","","","","Gets the default root TLS certificates from the embedded …","Parse OpenID Connect client configuration file into a …","If <code>oak-unsafe</code> is enabled, reads root TLS certificate from …","Creates <code>Identity</code> from the TLS certificate and private key …","","","","","","","","","","","","","","","","","","","","","","","Parse a collection of configuration entries and return the …","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,2,1,2,1,2,1,2,1,1,2,1,2,1,0,0,0,0,0,0,0,2,2,2,1,2,1,2,1,2,0,0,0,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,1,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2],"f":[[[],["result",6]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["app",3]],[[],["opt",3]],[[],["configentry",3]],[[]],[[]],null,[[["opt",3]],["result",6,[["applicationconfiguration",3]]]],[[["opt",3]]],[[["opt",3]],["result",6,[["httpconfiguration",3]]]],[[["opt",3]],["result",6,[["permissionsconfiguration",3]]]],[[]],[[["opt",3]]],[[["applicationconfiguration",3]],["result",6,[["signaturetable",3]]]],[[["configentry",3]],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["argmatches",3]]],[[["str",15]],["result",4]],[[],["vec",3,[["u8",15]]]],[[["opt",3]],["result",6,[["option",4,[["clientinfo",3]]]]]],[[["opt",3]],["result",6,[["certificate",3]]]],[[["opt",3]]],null,null,null,null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[],["request",3]],null,null,null,null,[[["configentry",3]],["bool",15]],null,null,null,[[],["result",6,[["configmap",3]]]],null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"Opt"],[3,"ConfigEntry"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};
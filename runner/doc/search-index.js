var searchIndex = JSON.parse('{\
"runner":{"doc":"A utility binary to run tests and orchestrate examples and…","i":[[4,"FormatMode","runner","",null,null],[13,"Check","","",0,null],[13,"Fix","","",0,null],[5,"main","","",null,[[],[["box",3],["result",4]]]],[5,"cleanup","","",null,[[]]],[5,"run_tests","","",null,[[],["step",4]]],[5,"run_cargo_tests","","",null,[[["runtestsopt",3]],["step",4]]],[5,"run_bazel_tests","","",null,[[],["step",4]]],[5,"run_tests_tsan","","",null,[[],["step",4]]],[5,"run_cargo_fuzz","","",null,[[["runcargofuzz",3]],["step",4]]],[5,"build_fuzz_dependencies","","",null,[[["runcargofuzz",3]],["step",4]]],[5,"run_fuzz_config","","",null,[[["fuzzconfig",3]],["step",4]]],[5,"copy_wasm_file","","",null,[[["fuzzableexample",3]],["step",4]]],[5,"run_fuzz_targets","","",null,[[["runcargofuzz",3]],["step",4]]],[5,"run_fuzz_targets_in_crate","","",null,[[["runcargofuzz",3],["pathbuf",3]],["step",4]]],[5,"format","","",null,[[["commits",3]],["step",4]]],[5,"check_format","","",null,[[["commits",3]],["step",4]]],[5,"run_ci","","",null,[[],["step",4]]],[5,"run_buildifier","","",null,[[["formatmode",4]],["step",4]]],[5,"run_prettier","","",null,[[["formatmode",4]],["step",4]]],[5,"run_markdownlint","","",null,[[["formatmode",4]],["step",4]]],[5,"run_embedmd","","",null,[[["formatmode",4]],["step",4]]],[5,"run_liche","","",null,[[],["step",4]]],[5,"run_hadolint","","",null,[[],["step",4]]],[5,"run_shellcheck","","",null,[[],["step",4]]],[5,"run_clang_format","","",null,[[["formatmode",4]],["step",4]]],[5,"run_check_license","","",null,[[["modifiedcontent",3]],["step",4]]],[5,"run_check_build_licenses","","",null,[[["modifiedcontent",3]],["step",4]]],[5,"run_check_todo","","",null,[[["modifiedcontent",3]],["step",4]]],[5,"run_cargo_fmt","","",null,[[["formatmode",4],["modifiedcontent",3]],["step",4]]],[5,"run_cargo_test","","",null,[[["runtestsopt",3],["modifiedcontent",3]],["step",4]]],[5,"run_cargo_doc","","",null,[[["modifiedcontent",3]],["step",4]]],[5,"run_clang_tidy","","",null,[[],["step",4]]],[5,"run_cargo_test_tsan","","",null,[[],["step",4]]],[5,"run_cargo_clippy","","",null,[[["modifiedcontent",3]],["step",4]]],[5,"run_cargo_deny","","",null,[[],["step",4]]],[5,"run_cargo_udeps","","",null,[[],["step",4]]],[5,"run_bazel_build","","",null,[[],["step",4]]],[5,"run_bazel_test","","",null,[[],["step",4]]],[0,"internal","","",null,null],[3,"Opt","runner::internal","",null,null],[12,"dry_run","","",1,null],[12,"commands","","",1,null],[12,"logs","","",1,null],[12,"keep_going","","",1,null],[12,"cmd","","",1,null],[3,"RunExamples","","",null,null],[12,"application_variant","","",2,null],[12,"permissions_file","","",2,null],[12,"example_name","","",2,null],[12,"build_client","","",2,null],[12,"build_server","","",2,null],[12,"run_server","","",2,null],[12,"client_additional_args","","",2,null],[12,"server_additional_args","","",2,null],[12,"build_docker","","",2,null],[12,"commits","","",2,null],[3,"RunFunctionsExamples","","",null,null],[12,"application_variant","","",3,null],[12,"example_name","","",3,null],[12,"build_client","","",3,null],[12,"build_server","","",3,null],[12,"run_server","","",3,null],[12,"client_additional_args","","",3,null],[12,"server_additional_args","","",3,null],[12,"build_docker","","",3,null],[12,"commits","","",3,null],[3,"Commits","","",null,null],[12,"commits","","",4,null],[3,"BuildClient","","",null,null],[12,"client_variant","","",5,null],[12,"client_rust_toolchain","","",5,null],[12,"client_rust_target","","",5,null],[3,"BuildServer","","",null,null],[12,"server_variant","","",6,null],[12,"server_rust_toolchain","","",6,null],[12,"server_rust_target","","",6,null],[3,"BuildFunctionsServer","","",null,null],[12,"server_variant","","",7,null],[12,"server_rust_toolchain","","",7,null],[12,"server_rust_target","","",7,null],[3,"RunTestsOpt","","",null,null],[12,"cleanup","","",8,null],[12,"benches","","",8,null],[12,"commits","","",8,null],[3,"RunCargoFuzz","","",null,null],[12,"crate_name","","",9,null],[12,"target_name","","",9,null],[12,"build_deps","","",9,null],[12,"args","","Additional `libFuzzer` arguments passed through to the…",9,null],[3,"CargoManifest","","Partial representation of Cargo manifest files.",null,null],[12,"bin","","",10,null],[12,"dependencies","","",10,null],[12,"dev_dependencies","","",10,null],[12,"build_dependencies","","",10,null],[3,"CargoBinary","","Partial information about a Cargo binary, as included in a…",null,null],[12,"name","","",11,null],[3,"DependencySpec","","Partial representation of a Json specification of a…",null,null],[12,"path","","",12,null],[3,"FuzzConfig","","Struct representing config files for fuzzing.",null,null],[12,"examples","","",13,null],[3,"FuzzableExample","","Config for building an example for fuzzing.",null,null],[12,"name","","Name of the example",14,null],[12,"manifest_path","","Path to the Cargo.toml file for the example.",14,null],[12,"out_dir","","Path to desired location of the .wasm file.",14,null],[3,"Status","","A construct to keep track of the status of the execution.…",null,null],[12,"error","","",15,null],[12,"ok","","",15,null],[12,"remaining","","",15,null],[3,"Context","","Encapsulates all the local state relative to a step, and…",null,null],[12,"opt","","",16,null],[12,"prefix","","",16,null],[3,"SingleStatusResult","","",null,null],[12,"value","","",17,null],[12,"logs","","",17,null],[3,"StepResult","","",null,null],[12,"values","","",18,null],[12,"failed_steps_prefixes","","",18,null],[3,"Cmd","","A single command.",null,null],[12,"executable","","",19,null],[12,"args","","",19,null],[12,"env","","",19,null],[12,"current_dir","","",19,null],[3,"RunningCmd","","",null,null],[12,"child","","",20,null],[4,"Command","","",null,null],[13,"RunExamples","","",21,null],[13,"RunFunctionsExamples","","",21,null],[13,"BuildFunctionsExample","","",21,null],[13,"BuildServer","","",21,null],[13,"BuildFunctionsServer","","",21,null],[13,"Format","","",21,null],[13,"CheckFormat","","",21,null],[13,"RunTests","","",21,null],[13,"RunCargoTests","","",21,null],[13,"RunBazelTests","","",21,null],[13,"RunTestsTsan","","",21,null],[13,"RunCargoFuzz","","",21,null],[13,"RunCargoDeny","","",21,null],[13,"RunCargoUdeps","","",21,null],[13,"RunCi","","",21,null],[13,"Completion","","",21,null],[4,"ServerVariant","","",null,null],[13,"Base","","Production-like server variant, without any of the…",22,null],[13,"Unsafe","","Debug server with logging and introspection client enabled",22,null],[13,"NoIntrospectionClient","","Debug server with logging, but no introspection client",22,null],[13,"Coverage","","Similar to Unsafe, but with additional commands for…",22,null],[13,"Experimental","","Debug server, with logging, introspection client, and…",22,null],[4,"FunctionsServerVariant","","",null,null],[13,"Base","","Production-like server variant, without any of the…",23,null],[13,"Unsafe","","Debug server with logging enabled",23,null],[4,"Dependency","","Partial representation of a dependency in a `Cargo.toml`…",null,null],[13,"Text","","Plaintext specification of a dependency with only the…",24,null],[13,"Json","","Json specification of a dependency.",24,null],[4,"StatusResultValue","","The outcome of an individual step of execution.",null,null],[13,"Ok","","",25,null],[13,"Error","","",25,null],[13,"Skipped","","",25,null],[4,"Step","","An execution step, which may be a single `Runnable`, or a…",null,null],[13,"Single","","",26,null],[12,"name","runner::internal::Step","",27,null],[12,"command","","",27,null],[13,"Multiple","runner::internal","",26,null],[12,"name","runner::internal::Step","",28,null],[12,"steps","","",28,null],[13,"WithBackground","runner::internal","",26,null],[12,"name","runner::internal::Step","",29,null],[12,"background","","",29,null],[12,"foreground","","",29,null],[5,"values_to_string","runner::internal","",null,[[],["string",3]]],[5,"run_step","","Run the provided step, printing out information about the…",null,[[["status",3],["context",3],["step",4]],[["pin",3],["box",3]]]],[5,"env_passthru","","If environment variable `name` is set in the current…",null,[[["command",3]]]],[5,"process_gone","","",null,[[]]],[5,"kill_process","","",null,[[]]],[5,"format_logs","","",null,[[],["string",3]]],[8,"RustBinaryOptions","","",null,null],[10,"features","","",30,[[],["string",3]]],[10,"server_rust_toolchain","","",30,[[],["option",4]]],[10,"server_rust_target","","",30,[[],["option",4]]],[10,"build_release","","",30,[[]]],[8,"Runnable","","A task that can be run asynchronously.",null,null],[10,"description","","Returns a description of the task, e.g. the command line…",31,[[],["string",3]]],[10,"run","","Starts the task and returns a [`Running`] implementation.",31,[[["box",3],["opt",3]],[["running",8],["box",3]]]],[8,"Running","","A task that is currently running asynchronously.",null,null],[11,"kill","","Attempts to kill the running task.",32,[[]]],[11,"stdout","","Returns an [`AsyncRead`] object to stream stdout logs from…",32,[[],[["box",3],["asyncread",8]]]],[11,"stderr","","Returns an [`AsyncRead`] object to stream stderr logs from…",32,[[],[["box",3],["asyncread",8]]]],[10,"result","","Returns the final result of the task, upon spontaneous…",32,[[["box",3]],[["box",3],["pin",3]]]],[11,"all_dependencies_with_toml_path","","",10,[[],[["string",3],["vec",3]]]],[11,"new","","",15,[[]]],[11,"update","","Guarantees that the `error`, `ok`, and `remaining` counts…",15,[[["context",3]]]],[11,"root","","",16,[[["opt",3]]]],[11,"child","","",16,[[]]],[11,"depth","","",16,[[]]],[11,"len","","Returns the number of top-level steps or commands. The…",26,[[]]],[11,"new","","",18,[[]]],[11,"new","","",19,[[],["box",3]]],[11,"new_with_env","","",19,[[["hashmap",3]],["box",3]]],[11,"new_in_dir","","",19,[[["pathbuf",3]],["box",3]]],[0,"examples","runner","",null,null],[3,"Example","runner::examples","",null,null],[12,"name","","",33,null],[12,"server","","",33,null],[12,"backends","","",33,null],[12,"applications","","",33,null],[12,"clients","","",33,null],[3,"ApplicationClassic","","",null,null],[12,"manifest","","",34,null],[12,"out","","",34,null],[12,"modules","","",34,null],[3,"ApplicationFunctions","","",null,null],[12,"wasm_path","","",35,null],[12,"target","","",35,null],[3,"ExampleServer","","",null,null],[12,"additional_args","","",36,null],[3,"Executable","","",null,null],[12,"target","","",37,null],[12,"additional_args","","",37,null],[3,"ClassicExample","","",null,null],[12,"example","","",38,null],[12,"applications","","",38,null],[12,"options","","",38,null],[3,"FunctionsExample","","",null,null],[12,"example","","",39,null],[12,"applications","","",39,null],[12,"options","","",39,null],[4,"Application","","A construct representing either an Oak Classic or an Oak…",null,null],[13,"Classic","","",40,null],[13,"Functions","","",40,null],[4,"Target","","",null,null],[13,"Bazel","","",41,null],[12,"bazel_target","runner::examples::Target","",42,null],[12,"config","","",42,null],[13,"Cargo","runner::examples","",41,null],[12,"cargo_manifest","runner::examples::Target","",43,null],[12,"additional_build_args","","",43,null],[13,"Npm","runner::examples","",41,null],[12,"package_directory","runner::examples::Target","",44,null],[13,"Shell","runner::examples","",41,null],[12,"script","runner::examples::Target","",45,null],[5,"run_examples","runner::examples","",null,[[["runexamples",3]],["step",4]]],[5,"run_functions_examples","","",null,[[["runfunctionsexamples",3]],["step",4]]],[5,"build_server","","",null,[[["buildserver",3]],["step",4]]],[5,"build_functions_server","","",null,[[["buildfunctionsserver",3]],["step",4]]],[5,"run_example","","",null,[[["classicexample",3]],["step",4]]],[5,"run_functions_example","","",null,[[["functionsexample",3]],["step",4]]],[5,"build_functions_example","","",null,[[["runfunctionsexamples",3]],["step",4]]],[5,"build_wasm_module","","",null,[[["target",4]],["step",4]]],[5,"run_example_server","","",null,[[["exampleserver",3],["string",3],["buildserver",3],["vec",3]],[["runnable",8],["box",3]]]],[5,"run_functions_example_server","","",null,[[["exampleserver",3],["applicationfunctions",3]],[["runnable",8],["box",3]]]],[5,"run_clients","","",null,[[["vec",3],["string",3],["buildclient",3],["example",3]],["step",4]]],[5,"run_client","","",null,[[["string",3],["executable",3],["buildclient",3],["vec",3]],["step",4]]],[5,"build_application","","",null,[[["applicationclassic",3]],[["runnable",8],["box",3]]]],[5,"build_docker","","",null,[[["example",3]],["step",4]]],[5,"build","","",null,[[["target",4],["buildclient",3]],[["runnable",8],["box",3]]]],[5,"run","","",null,[[["string",3],["executable",3],["buildclient",3],["vec",3]],[["runnable",8],["box",3]]]],[5,"build_rust_binary","","",null,[[["hashmap",3]],["step",4]]],[17,"DEFAULT_SERVER_RUST_TARGET","","",null,null],[17,"DEFAULT_EXAMPLE_BACKEND_RUST_TARGET","","",null,null],[17,"ALL_CLIENTS","","",null,null],[17,"NO_CLIENTS","","",null,null],[8,"OakExample","","",null,null],[10,"get_backends","","",46,[[],["hashmap",3]]],[10,"get_build_client","","",46,[[],["buildclient",3]]],[10,"construct_application_build_steps","","Constructs application build steps.",46,[[],[["vec",3],["step",4]]]],[10,"construct_example_server_run_step","","Constructs run step for the example server.",46,[[["step",4]],["step",4]]],[11,"construct_backend_build_steps","","Constructs build steps for the backends.",46,[[],[["vec",3],["step",4]]]],[11,"construct_backend_run_steps","","Recursively constructs run steps for the backends.",46,[[["step",4]],["step",4]]],[11,"has_classic_app","","",33,[[]]],[11,"has_functions_app","","",33,[[]]],[11,"construct_application_build_steps","","",34,[[],[["vec",3],["step",4]]]],[11,"construct_example_server_run_step","","",34,[[["classicexample",3],["step",4]],["step",4]]],[11,"construct_application_build_steps","","",35,[[],[["vec",3],["step",4]]]],[11,"construct_example_server_run_step","","",35,[[["functionsexample",3],["step",4]],["step",4]]],[11,"new","","",38,[[["runexamples",3],["example",3]]]],[11,"new","","",39,[[["example",3],["runfunctionsexamples",3]]]],[0,"files","runner","",null,null],[5,"read_file","runner::files","",null,[[["pathbuf",3]],["string",3]]],[5,"source_files","","Return an iterator of all the first-party and non-ignored…",null,[[]]],[5,"file_contains","","",null,[[["pathbuf",3]]]],[5,"example_toml_files","","",null,[[["commits",3]],[["box",3],["iterator",8]]]],[5,"affected_example_toml_filles","","",null,[[["string",3],["vec",3]],[["box",3],["iterator",8]]]],[5,"fuzz_config_toml_files","","",null,[[]]],[5,"crate_manifest_files","","Return an iterator of all known Cargo Manifest files that…",null,[[]]],[5,"workspace_manifest_files","","Return an iterator of all known Cargo Manifest files that…",null,[[]]],[5,"is_source_code_file","","Return whether the provided path refers to a source file…",null,[[["pathbuf",3]]]],[5,"is_clang_format_file","","Return whether the provided path refers to a source file…",null,[[["pathbuf",3]]]],[5,"is_bazel_file","","Return whether the provided path refers to a Bazel file…",null,[[["pathbuf",3]]]],[5,"is_build_file","","",null,[[["pathbuf",3]]]],[5,"is_markdown_file","","Return whether the provided path refers to a markdown file…",null,[[["pathbuf",3]]]],[5,"is_dockerfile","","",null,[[["pathbuf",3]]]],[5,"is_toml_file","","",null,[[["pathbuf",3]]]],[5,"is_yaml_file","","",null,[[["pathbuf",3]]]],[5,"is_html_file","","",null,[[["pathbuf",3]]]],[5,"is_javascript_file","","",null,[[["pathbuf",3]]]],[5,"is_typescript_file","","",null,[[["pathbuf",3]]]],[5,"is_shell_script","","",null,[[["pathbuf",3]]]],[5,"is_fuzzing_toml_file","","Return whether the provided path refers to a `fuzz` crate…",null,[[["pathbuf",3]]]],[5,"is_cargo_toml_file","","Return whether the provided path refers to a `Cargo.toml`…",null,[[["pathbuf",3]]]],[5,"is_cargo_workspace_file","","Return whether the provided path refers to a…",null,[[["pathbuf",3]]]],[5,"is_cargo_package_file","","Return whether the provided path refers to a `Cargo.toml`…",null,[[["pathbuf",3]]]],[5,"is_example_toml_file","","",null,[[["pathbuf",3]]]],[5,"is_fuzz_config_toml_file","","",null,[[["pathbuf",3]]]],[5,"is_ignored_entry","","",null,[[["direntry",3]]]],[5,"is_ignored_path","","Return whether to ignore the specified path. This is used…",null,[[["pathbuf",3]]]],[5,"to_string","","",null,[[["pathbuf",3]],["string",3]]],[0,"diffs","runner","",null,null],[3,"ModifiedContent","runner::diffs","",null,null],[12,"files","","List of modified files.",47,null],[5,"modified_files","","",null,[[["commits",3]],["modifiedcontent",3]]],[5,"directly_modified_crates","","Returns the list of paths to `Cargo.toml` files for all…",null,[[["commits",3]],["modifiedcontent",3]]],[5,"find_crate_toml_file","","",null,[[["string",3]],[["option",4],["string",3]]]],[5,"affected_protos","","List of paths to all `.proto` files affected by the recent…",null,[[["commits",3]],[["string",3],["vec",3]]]],[5,"add_affected_protos","","Adds `proto_path` to the list of `affected_protos` if…",null,[[["string",3],["vec",3]]]],[5,"imported_proto_files","","Returns paths to all `.proto` files that `proto_file_path`…",null,[[["string",3]],[["string",3],["vec",3]]]],[5,"all_affected_crates","","Path to the `Cargo.toml` files for all crates that are…",null,[[["commits",3]],["modifiedcontent",3]]],[5,"crates_affected_by_protos","","Returns the paths to `Cargo.toml` files of crates affected…",null,[[],[["hashset",3],["string",3]]]],[5,"add_affected_crates","","Checks if `crate_toml_path` has a direct or indirect…",null,[[["pathbuf",3],["hashmap",3]]]],[5,"get_local_dependencies","","Returns paths to `Cargo.toml` files of local crates…",null,[[["pathbuf",3]],[["string",3],["vec",3]]]],[11,"contains","","",47,[[]]],[0,"check_todo","runner","",null,null],[3,"CheckTodo","runner::check_todo","A [`Runnable`] command that checks for the existence of…",null,null],[12,"path","","",48,null],[7,"PATTERN","","",null,null],[11,"new","","",48,[[["string",3]],["box",3]]],[11,"is_invalid_todo","","",48,[[]]],[0,"check_license","runner","",null,null],[3,"CheckLicense","runner::check_license","A [`Runnable`] command that checks for the existence of…",null,null],[12,"path","","",49,null],[11,"new","","",49,[[["string",3]],["box",3]]],[0,"check_build_licenses","runner","",null,null],[3,"CheckBuildLicenses","runner::check_build_licenses","A [`Runnable`] command that checks for the existence of…",null,null],[12,"path","","",50,null],[11,"new","","",50,[[["string",3]],["box",3]]],[7,"PROCESSES","runner","",null,null],[14,"spread","","Similar to the `vec!` macro, but also allows a \\\"spread\\\"…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","runner::internal","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","runner::examples","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","runner::diffs","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","runner::check_todo","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","runner::check_license","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","runner::check_build_licenses","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"features","runner::internal","",7,[[],["string",3]]],[11,"server_rust_toolchain","","",7,[[],["option",4]]],[11,"server_rust_target","","",7,[[],["option",4]]],[11,"build_release","","",7,[[]]],[11,"features","","",6,[[],["string",3]]],[11,"server_rust_toolchain","","",6,[[],["option",4]]],[11,"server_rust_target","","",6,[[],["option",4]]],[11,"build_release","","",6,[[]]],[11,"description","","",19,[[],["string",3]]],[11,"run","","Run the provided command, printing a status message with…",19,[[["box",3],["opt",3]],[["running",8],["box",3]]]],[11,"description","runner::check_todo","",48,[[],["string",3]]],[11,"run","","",48,[[["box",3],["opt",3]],[["running",8],["box",3]]]],[11,"description","runner::check_license","",49,[[],["string",3]]],[11,"run","","",49,[[["box",3],["opt",3]],[["running",8],["box",3]]]],[11,"description","runner::check_build_licenses","",50,[[],["string",3]]],[11,"run","","",50,[[["box",3],["opt",3]],[["running",8],["box",3]]]],[11,"get_backends","runner::examples","",38,[[],["hashmap",3]]],[11,"get_build_client","","",38,[[],["buildclient",3]]],[11,"construct_application_build_steps","","",38,[[],[["vec",3],["step",4]]]],[11,"construct_example_server_run_step","","",38,[[["step",4]],["step",4]]],[11,"get_backends","","",39,[[],["hashmap",3]]],[11,"get_build_client","","",39,[[],["buildclient",3]]],[11,"construct_application_build_steps","","",39,[[],[["vec",3],["step",4]]]],[11,"construct_example_server_run_step","","",39,[[["step",4]],["step",4]]],[11,"kill","runner::internal","",20,[[]]],[11,"stdout","","",20,[[],[["box",3],["asyncread",8]]]],[11,"stderr","","",20,[[],[["box",3],["asyncread",8]]]],[11,"result","","",20,[[["box",3]],[["box",3],["pin",3]]]],[11,"result","","",17,[[["box",3]],[["box",3],["pin",3]]]],[11,"clone","","",1,[[],["opt",3]]],[11,"clone","","",21,[[],["command",4]]],[11,"clone","","",2,[[],["runexamples",3]]],[11,"clone","","",3,[[],["runfunctionsexamples",3]]],[11,"clone","","",4,[[],["commits",3]]],[11,"clone","","",5,[[],["buildclient",3]]],[11,"clone","","",22,[[],["servervariant",4]]],[11,"clone","","",6,[[],["buildserver",3]]],[11,"clone","","",23,[[],["functionsservervariant",4]]],[11,"clone","","",7,[[],["buildfunctionsserver",3]]],[11,"clone","","",8,[[],["runtestsopt",3]]],[11,"clone","","",9,[[],["runcargofuzz",3]]],[11,"clone","","",15,[[],["status",3]]],[11,"clone","","",25,[[],["statusresultvalue",4]]],[11,"clone","","",17,[[],["singlestatusresult",3]]],[11,"default","","",4,[[],["commits",3]]],[11,"default","runner::examples","",36,[[],["exampleserver",3]]],[11,"eq","runner::internal","",22,[[["servervariant",4]]]],[11,"eq","","",23,[[["functionsservervariant",4]]]],[11,"eq","","",24,[[["dependency",4]]]],[11,"ne","","",24,[[["dependency",4]]]],[11,"eq","","",12,[[["dependencyspec",3]]]],[11,"ne","","",12,[[["dependencyspec",3]]]],[11,"eq","","",25,[[["statusresultvalue",4]]]],[11,"partial_cmp","","",24,[[["dependency",4]],[["ordering",4],["option",4]]]],[11,"lt","","",24,[[["dependency",4]]]],[11,"le","","",24,[[["dependency",4]]]],[11,"gt","","",24,[[["dependency",4]]]],[11,"ge","","",24,[[["dependency",4]]]],[11,"partial_cmp","","",12,[[["dependencyspec",3]],[["ordering",4],["option",4]]]],[11,"lt","","",12,[[["dependencyspec",3]]]],[11,"le","","",12,[[["dependencyspec",3]]]],[11,"gt","","",12,[[["dependencyspec",3]]]],[11,"ge","","",12,[[["dependencyspec",3]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","runner::examples","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","runner::diffs","",47,[[["formatter",3]],["result",6]]],[11,"fmt","runner::internal","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"hash","","",25,[[]]],[11,"from_str","","",22,[[],["result",4]]],[11,"from_str","","",23,[[],["result",4]]],[11,"clap","","",1,[[],["app",3]]],[11,"from_clap","","",1,[[["argmatches",3]]]],[11,"clap","","",21,[[],["app",3]]],[11,"from_clap","","",21,[[["argmatches",3]]]],[11,"clap","","",2,[[],["app",3]]],[11,"from_clap","","",2,[[["argmatches",3]]]],[11,"clap","","",3,[[],["app",3]]],[11,"from_clap","","",3,[[["argmatches",3]]]],[11,"clap","","",4,[[],["app",3]]],[11,"from_clap","","",4,[[["argmatches",3]]]],[11,"clap","","",5,[[],["app",3]]],[11,"from_clap","","",5,[[["argmatches",3]]]],[11,"clap","","",6,[[],["app",3]]],[11,"from_clap","","",6,[[["argmatches",3]]]],[11,"clap","","",7,[[],["app",3]]],[11,"from_clap","","",7,[[["argmatches",3]]]],[11,"clap","","",8,[[],["app",3]]],[11,"from_clap","","",8,[[["argmatches",3]]]],[11,"clap","","",9,[[],["app",3]]],[11,"from_clap","","",9,[[["argmatches",3]]]],[11,"augment_clap","","",1,[[["app",3]],["app",3]]],[11,"is_subcommand","","",1,[[]]],[11,"augment_clap","","",21,[[["app",3]],["app",3]]],[11,"from_subcommand","","",21,[[],["option",4]]],[11,"is_subcommand","","",21,[[]]],[11,"augment_clap","","",2,[[["app",3]],["app",3]]],[11,"is_subcommand","","",2,[[]]],[11,"augment_clap","","",3,[[["app",3]],["app",3]]],[11,"is_subcommand","","",3,[[]]],[11,"augment_clap","","",4,[[["app",3]],["app",3]]],[11,"is_subcommand","","",4,[[]]],[11,"augment_clap","","",5,[[["app",3]],["app",3]]],[11,"is_subcommand","","",5,[[]]],[11,"augment_clap","","",6,[[["app",3]],["app",3]]],[11,"is_subcommand","","",6,[[]]],[11,"augment_clap","","",7,[[["app",3]],["app",3]]],[11,"is_subcommand","","",7,[[]]],[11,"augment_clap","","",8,[[["app",3]],["app",3]]],[11,"is_subcommand","","",8,[[]]],[11,"augment_clap","","",9,[[["app",3]],["app",3]]],[11,"is_subcommand","","",9,[[]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"deserialize","runner::examples","",33,[[],["result",4]]],[11,"deserialize","","",40,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","","",35,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"deserialize","","",41,[[],["result",4]]],[11,"deserialize","","",37,[[],["result",4]]]],"p":[[4,"FormatMode"],[3,"Opt"],[3,"RunExamples"],[3,"RunFunctionsExamples"],[3,"Commits"],[3,"BuildClient"],[3,"BuildServer"],[3,"BuildFunctionsServer"],[3,"RunTestsOpt"],[3,"RunCargoFuzz"],[3,"CargoManifest"],[3,"CargoBinary"],[3,"DependencySpec"],[3,"FuzzConfig"],[3,"FuzzableExample"],[3,"Status"],[3,"Context"],[3,"SingleStatusResult"],[3,"StepResult"],[3,"Cmd"],[3,"RunningCmd"],[4,"Command"],[4,"ServerVariant"],[4,"FunctionsServerVariant"],[4,"Dependency"],[4,"StatusResultValue"],[4,"Step"],[13,"Single"],[13,"Multiple"],[13,"WithBackground"],[8,"RustBinaryOptions"],[8,"Runnable"],[8,"Running"],[3,"Example"],[3,"ApplicationClassic"],[3,"ApplicationFunctions"],[3,"ExampleServer"],[3,"Executable"],[3,"ClassicExample"],[3,"FunctionsExample"],[4,"Application"],[4,"Target"],[13,"Bazel"],[13,"Cargo"],[13,"Npm"],[13,"Shell"],[8,"OakExample"],[3,"ModifiedContent"],[3,"CheckTodo"],[3,"CheckLicense"],[3,"CheckBuildLicenses"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);
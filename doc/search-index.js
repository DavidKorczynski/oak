var searchIndex={};
searchIndex["abitest_0_frontend"] = {"doc":"","i":[[5,"frontend_oak_main","abitest_0_frontend","",null,[[["u64"]]]],[0,"proto","","",null,null],[0,"abitest","abitest_0_frontend::proto","Generated file from `abitest.proto`",null,null],[3,"ABITestRequest","abitest_0_frontend::proto::abitest","Generated files are compatible only with the same versionâ€¦",null,null],[12,"include","","",0,null],[12,"exclude","","",0,null],[12,"unknown_fields","","",0,null],[12,"cached_size","","",0,null],[3,"ABITestResponse","","",null,null],[12,"results","","",1,null],[12,"unknown_fields","","",1,null],[12,"cached_size","","",1,null],[3,"ABITestResponse_TestResult","","",null,null],[12,"name","","",2,null],[12,"success","","",2,null],[12,"details","","",2,null],[12,"disabled","","",2,null],[12,"unknown_fields","","",2,null],[12,"cached_size","","",2,null],[3,"GrpcTestRequest","","",null,null],[12,"method_result","","",3,null],[12,"unknown_fields","","",3,null],[12,"cached_size","","",3,null],[3,"GrpcTestResponse","","",null,null],[12,"text","","",4,null],[12,"unknown_fields","","",4,null],[12,"cached_size","","",4,null],[4,"GrpcTestRequest_oneof_method_result","","",null,null],[13,"err_code","","",5,null],[13,"ok_text","","",5,null],[5,"file_descriptor_proto","","",null,[[],["filedescriptorproto"]]],[11,"new","","",0,[[],["abitestrequest"]]],[11,"get_include","","",0,[[["self"]],["str"]]],[11,"clear_include","","",0,[[["self"]]]],[11,"set_include","","",0,[[["self"],["string"]]]],[11,"mut_include","","",0,[[["self"]],["string"]]],[11,"take_include","","",0,[[["self"]],["string"]]],[11,"get_exclude","","",0,[[["self"]],["str"]]],[11,"clear_exclude","","",0,[[["self"]]]],[11,"set_exclude","","",0,[[["self"],["string"]]]],[11,"mut_exclude","","",0,[[["self"]],["string"]]],[11,"take_exclude","","",0,[[["self"]],["string"]]],[11,"new","","",1,[[],["abitestresponse"]]],[11,"get_results","","",1,[[["self"]]]],[11,"clear_results","","",1,[[["self"]]]],[11,"set_results","","",1,[[["self"],["repeatedfield",["abitestresponse_testresult"]],["abitestresponse_testresult"]]]],[11,"mut_results","","",1,[[["self"]],["repeatedfield"]]],[11,"take_results","","",1,[[["self"]],[["repeatedfield",["abitestresponse_testresult"]],["abitestresponse_testresult"]]]],[11,"new","","",2,[[],["abitestresponse_testresult"]]],[11,"get_name","","",2,[[["self"]],["str"]]],[11,"clear_name","","",2,[[["self"]]]],[11,"set_name","","",2,[[["self"],["string"]]]],[11,"mut_name","","",2,[[["self"]],["string"]]],[11,"take_name","","",2,[[["self"]],["string"]]],[11,"get_success","","",2,[[["self"]],["bool"]]],[11,"clear_success","","",2,[[["self"]]]],[11,"set_success","","",2,[[["self"],["bool"]]]],[11,"get_details","","",2,[[["self"]],["str"]]],[11,"clear_details","","",2,[[["self"]]]],[11,"set_details","","",2,[[["self"],["string"]]]],[11,"mut_details","","",2,[[["self"]],["string"]]],[11,"take_details","","",2,[[["self"]],["string"]]],[11,"get_disabled","","",2,[[["self"]],["bool"]]],[11,"clear_disabled","","",2,[[["self"]]]],[11,"set_disabled","","",2,[[["self"],["bool"]]]],[11,"new","","",3,[[],["grpctestrequest"]]],[11,"get_err_code","","",3,[[["self"]],["i32"]]],[11,"clear_err_code","","",3,[[["self"]]]],[11,"has_err_code","","",3,[[["self"]],["bool"]]],[11,"set_err_code","","",3,[[["self"],["i32"]]]],[11,"get_ok_text","","",3,[[["self"]],["str"]]],[11,"clear_ok_text","","",3,[[["self"]]]],[11,"has_ok_text","","",3,[[["self"]],["bool"]]],[11,"set_ok_text","","",3,[[["self"],["string"]]]],[11,"mut_ok_text","","",3,[[["self"]],["string"]]],[11,"take_ok_text","","",3,[[["self"]],["string"]]],[11,"new","","",4,[[],["grpctestresponse"]]],[11,"get_text","","",4,[[["self"]],["str"]]],[11,"clear_text","","",4,[[["self"]]]],[11,"set_text","","",4,[[["self"],["string"]]]],[11,"mut_text","","",4,[[["self"]],["string"]]],[11,"take_text","","",4,[[["self"]],["string"]]],[0,"abitest_grpc","abitest_0_frontend::proto","",null,null],[3,"Dispatcher","abitest_0_frontend::proto::abitest_grpc","",null,null],[3,"OakABITestServiceClient","","",null,null],[12,"0","","",6,null],[8,"OakABITestService","","",null,null],[10,"run_tests","","",7,[[["abitestrequest"],["self"]],[["abitestresponse"],["result",["abitestresponse"]]]]],[10,"unary_method","","",7,[[["grpctestrequest"],["self"]],[["result",["grpctestresponse"]],["grpctestresponse"]]]],[10,"server_streaming_method","","",7,[[["grpctestrequest"],["self"],["channelresponsewriter"]]]],[10,"client_streaming_method","","",7,[[["vec",["grpctestrequest"]],["self"],["grpctestrequest"]],[["result",["grpctestresponse"]],["grpctestresponse"]]]],[10,"bidi_streaming_method","","",7,[[["vec",["grpctestrequest"]],["grpctestrequest"],["self"],["channelresponsewriter"]]]],[11,"new","","",8,[[["t"]],["dispatcher"]]],[11,"run_tests","","",6,[[["abitestrequest"],["self"]],[["abitestresponse"],["result",["abitestresponse"]]]]],[11,"unary_method","","",6,[[["grpctestrequest"],["self"]],[["result",["grpctestresponse"]],["grpctestresponse"]]]],[11,"server_streaming_method","","",6,[[["grpctestrequest"],["self"]],[["receiver",["grpcresponse"]],["result",["receiver"]]]]],[11,"from","abitest_0_frontend::proto::abitest","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"decode","","",0,[[["message"]],[["result",["oakerror"]],["oakerror"]]]],[11,"encode","","",0,[[["self"]],[["oakerror"],["result",["message","oakerror"]],["message"]]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"decode","","",1,[[["message"]],[["result",["oakerror"]],["oakerror"]]]],[11,"encode","","",1,[[["self"]],[["oakerror"],["result",["message","oakerror"]],["message"]]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"decode","","",2,[[["message"]],[["result",["oakerror"]],["oakerror"]]]],[11,"encode","","",2,[[["self"]],[["oakerror"],["result",["message","oakerror"]],["message"]]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"decode","","",3,[[["message"]],[["result",["oakerror"]],["oakerror"]]]],[11,"encode","","",3,[[["self"]],[["oakerror"],["result",["message","oakerror"]],["message"]]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"decode","","",4,[[["message"]],[["result",["oakerror"]],["oakerror"]]]],[11,"encode","","",4,[[["self"]],[["oakerror"],["result",["message","oakerror"]],["message"]]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","abitest_0_frontend::proto::abitest_grpc","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"handle_command","","Handle incoming gRPC events for an [`ServerNode`].",8,[[["self"],["invocation"]],[["result",["oakerror"]],["oakerror"]]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"clone","abitest_0_frontend::proto::abitest","",0,[[["self"]],["abitestrequest"]]],[11,"clone","","",1,[[["self"]],["abitestresponse"]]],[11,"clone","","",2,[[["self"]],["abitestresponse_testresult"]]],[11,"clone","","",3,[[["self"]],["grpctestrequest"]]],[11,"clone","","",5,[[["self"]],["grpctestrequest_oneof_method_result"]]],[11,"clone","","",4,[[["self"]],["grpctestresponse"]]],[11,"default","","",0,[[],["abitestrequest"]]],[11,"default","","",1,[[],["abitestresponse"]]],[11,"default","","",2,[[],["abitestresponse_testresult"]]],[11,"default","","",3,[[],["grpctestrequest"]]],[11,"default","","",4,[[],["grpctestresponse"]]],[11,"eq","","",0,[[["abitestrequest"],["self"]],["bool"]]],[11,"ne","","",0,[[["abitestrequest"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["abitestresponse"]],["bool"]]],[11,"ne","","",1,[[["self"],["abitestresponse"]],["bool"]]],[11,"eq","","",2,[[["self"],["abitestresponse_testresult"]],["bool"]]],[11,"ne","","",2,[[["self"],["abitestresponse_testresult"]],["bool"]]],[11,"eq","","",3,[[["self"],["grpctestrequest"]],["bool"]]],[11,"ne","","",3,[[["self"],["grpctestrequest"]],["bool"]]],[11,"eq","","",5,[[["grpctestrequest_oneof_method_result"],["self"]],["bool"]]],[11,"ne","","",5,[[["grpctestrequest_oneof_method_result"],["self"]],["bool"]]],[11,"eq","","",4,[[["grpctestresponse"],["self"]],["bool"]]],[11,"ne","","",4,[[["grpctestresponse"],["self"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"is_initialized","","",0,[[["self"]],["bool"]]],[11,"merge_from","","",0,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",0,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",0,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",0,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",0,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",0,[[["self"]],["unknownfields"]]],[11,"as_any","","",0,[[["self"]],["any"]]],[11,"as_any_mut","","",0,[[["self"]],["any"]]],[11,"into_any","","",0,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",0,[[["self"]],["messagedescriptor"]]],[11,"new","","",0,[[],["abitestrequest"]]],[11,"descriptor_static","","",0,[[],["messagedescriptor"]]],[11,"default_instance","","",0,[[],["abitestrequest"]]],[11,"is_initialized","","",1,[[["self"]],["bool"]]],[11,"merge_from","","",1,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",1,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",1,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",1,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",1,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",1,[[["self"]],["unknownfields"]]],[11,"as_any","","",1,[[["self"]],["any"]]],[11,"as_any_mut","","",1,[[["self"]],["any"]]],[11,"into_any","","",1,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",1,[[["self"]],["messagedescriptor"]]],[11,"new","","",1,[[],["abitestresponse"]]],[11,"descriptor_static","","",1,[[],["messagedescriptor"]]],[11,"default_instance","","",1,[[],["abitestresponse"]]],[11,"is_initialized","","",2,[[["self"]],["bool"]]],[11,"merge_from","","",2,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",2,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",2,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",2,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",2,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",2,[[["self"]],["unknownfields"]]],[11,"as_any","","",2,[[["self"]],["any"]]],[11,"as_any_mut","","",2,[[["self"]],["any"]]],[11,"into_any","","",2,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",2,[[["self"]],["messagedescriptor"]]],[11,"new","","",2,[[],["abitestresponse_testresult"]]],[11,"descriptor_static","","",2,[[],["messagedescriptor"]]],[11,"default_instance","","",2,[[],["abitestresponse_testresult"]]],[11,"is_initialized","","",3,[[["self"]],["bool"]]],[11,"merge_from","","",3,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",3,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",3,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",3,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",3,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",3,[[["self"]],["unknownfields"]]],[11,"as_any","","",3,[[["self"]],["any"]]],[11,"as_any_mut","","",3,[[["self"]],["any"]]],[11,"into_any","","",3,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",3,[[["self"]],["messagedescriptor"]]],[11,"new","","",3,[[],["grpctestrequest"]]],[11,"descriptor_static","","",3,[[],["messagedescriptor"]]],[11,"default_instance","","",3,[[],["grpctestrequest"]]],[11,"is_initialized","","",4,[[["self"]],["bool"]]],[11,"merge_from","","",4,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",4,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",4,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",4,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",4,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",4,[[["self"]],["unknownfields"]]],[11,"as_any","","",4,[[["self"]],["any"]]],[11,"as_any_mut","","",4,[[["self"]],["any"]]],[11,"into_any","","",4,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",4,[[["self"]],["messagedescriptor"]]],[11,"new","","",4,[[],["grpctestresponse"]]],[11,"descriptor_static","","",4,[[],["messagedescriptor"]]],[11,"default_instance","","",4,[[],["grpctestresponse"]]],[11,"clear","","",0,[[["self"]]]],[11,"clear","","",1,[[["self"]]]],[11,"clear","","",2,[[["self"]]]],[11,"clear","","",3,[[["self"]]]],[11,"clear","","",4,[[["self"]]]],[11,"as_ref","","",0,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",1,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",2,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",3,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",4,[[["self"]],["protobufvalueref"]]],[11,"invoke","abitest_0_frontend::proto::abitest_grpc","",8,[[["str"],["self"],["channelresponsewriter"]]]]],"p":[[3,"ABITestRequest"],[3,"ABITestResponse"],[3,"ABITestResponse_TestResult"],[3,"GrpcTestRequest"],[3,"GrpcTestResponse"],[4,"GrpcTestRequest_oneof_method_result"],[3,"OakABITestServiceClient"],[8,"OakABITestService"],[3,"Dispatcher"]]};
searchIndex["abitest_1_backend"] = {"doc":"","i":[[5,"backend_oak_main","abitest_1_backend","",null,[[["u64"]]]],[5,"backend_fake_main","","",null,[[["u64"]]]]],"p":[]};
searchIndex["abitest_common"] = {"doc":"","i":[[3,"InternalMessage","abitest_common","",null,null],[12,"msg","","",0,null],[17,"LOG_CONFIG_NAME","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"encode","","",0,[[["self"]],[["message"],["result",["message","oakerror"]],["oakerror"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"encode","","",0,[[["self"]],[["oakerror"],["result",["message","oakerror"]],["message"]]]]],"p":[[3,"InternalMessage"]]};
searchIndex["abitest_tests"] = {"doc":"","i":[[5,"oak_main","abitest_tests","",null,[[["u64"]],["i32"]]]],"p":[]};
searchIndex["aggregator"] = {"doc":"Aggregator example for Project Oak.","i":[[3,"AggregatorNode","aggregator","Oak Node that collects and aggregates data. Data isâ€¦",null,null],[5,"oak_main","","",null,[[["u64"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]]],"p":[[3,"AggregatorNode"]]};
searchIndex["aggregator_backend"] = {"doc":"Backend server for the Aggregator example.","i":[[3,"AggregatorBackend","aggregator_backend","",null,null],[5,"main","","",null,[[],[["result",["box"]],["box",["error"]]]]],[0,"proto","","",null,null],[3,"SerializedSparseVector","aggregator_backend::proto","Data provided by clients is represented by Sparse Vectors:â€¦",null,null],[12,"indices","","",0,null],[12,"values","","",0,null],[3,"Sample","","Message sent by clients.",null,null],[12,"bucket","","Data with different Bucket IDs is not mixed and aggregatedâ€¦",1,null],[12,"data","","",1,null],[0,"aggregator_server","","Generated server implementations.",null,null],[3,"_Inner","aggregator_backend::proto::aggregator_server","",null,null],[12,"0","","",2,null],[12,"1","","",2,null],[8,"Aggregator","","Generated trait containing gRPC methods that should beâ€¦",null,null],[10,"submit_sample","","",3,[[["self"],["sample"],["request",["sample"]]],[["pin",["box"]],["box",["future"]]]]],[11,"from","aggregator_backend","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"into_request","","",4,[[],["request"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","aggregator_backend::proto","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"into_request","","",0,[[],["request"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"into_request","","",1,[[],["request"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","aggregator_backend::proto::aggregator_server","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"into_request","","",2,[[],["request"]]],[11,"vzip","","",2,[[],["v"]]],[11,"submit_sample","aggregator_backend","",4,[[["request",["sample"]],["self"],["sample"]],[["pin",["box"]],["box",["future"]]]]],[11,"clone","aggregator_backend::proto","",0,[[["self"]],["serializedsparsevector"]]],[11,"clone","","",1,[[["self"]],["sample"]]],[11,"clone","aggregator_backend::proto::aggregator_server","",2,[[["self"]],["self"]]],[11,"default","aggregator_backend::proto","",0,[[],["serializedsparsevector"]]],[11,"default","","",1,[[],["sample"]]],[11,"default","aggregator_backend","",4,[[],["aggregatorbackend"]]],[11,"eq","aggregator_backend::proto","",0,[[["serializedsparsevector"],["self"]],["bool"]]],[11,"ne","","",0,[[["serializedsparsevector"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["sample"]],["bool"]]],[11,"ne","","",1,[[["self"],["sample"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","aggregator_backend::proto::aggregator_server","",2,[[["formatter"],["self"]],["result"]]],[11,"encode_raw","aggregator_backend::proto","",0,[[["self"],["b"]]]],[11,"merge_field","","",0,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",0,[[["self"]],["usize"]]],[11,"clear","","",0,[[["self"]]]],[11,"encode_raw","","",1,[[["self"],["b"]]]],[11,"merge_field","","",1,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",1,[[["self"]],["usize"]]],[11,"clear","","",1,[[["self"]]]]],"p":[[3,"SerializedSparseVector"],[3,"Sample"],[3,"_Inner"],[8,"Aggregator"],[3,"AggregatorBackend"]]};
searchIndex["aggregator_common"] = {"doc":"","i":[[3,"ThresholdAggregator","aggregator_common","Generic data structure that combines data values andâ€¦",null,null],[8,"Monoid","","Represents a data structure with a single associativeâ€¦",null,null],[10,"identity","","",0,[[],["self"]]],[10,"combine","","",0,[[["self"]],["self"]]],[11,"new","","",1,[[["u64"]],["self"]]],[11,"submit","","Combines a new sample with the current aggregated value.",1,[[["self"],["t"]]]],[11,"get","","Returns the current aggregated value if the number ofâ€¦",1,[[["self"]],[["option"],["t"]]]],[11,"take","","If the number of current samples is at leastâ€¦",1,[[["self"]],["option"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]]],"p":[[8,"Monoid"],[3,"ThresholdAggregator"]]};
searchIndex["chat"] = {"doc":"","i":[[5,"oak_main","chat","",null,[[["u64"]]]]],"p":[]};
searchIndex["expect"] = {"doc":"","i":[[14,"expect_eq","expect","",null,null],[14,"expect_matches","","",null,null],[14,"expect","","",null,null]],"p":[]};
searchIndex["grpc_compiler"] = {"doc":"","i":[[0,"codegen","grpc_compiler","",null,null],[5,"gen","grpc_compiler::codegen","",null,[[],[["genresult"],["vec",["genresult"]]]]],[5,"protoc_gen_grpc_rust_main","","",null,[[]]]],"p":[]};
searchIndex["hello_world"] = {"doc":"","i":[[5,"oak_main","hello_world","",null,[[["u64"]]]]],"p":[]};
searchIndex["machine_learning"] = {"doc":"","i":[[5,"oak_main","machine_learning","",null,[[["u64"]]]]],"p":[]};
searchIndex["oak"] = {"doc":"","i":[[4,"ChannelReadStatus","oak","Single byte values used to indicate the read status of aâ€¦",null,null],[13,"NotReady","","No pending messages available on channel.",0,null],[13,"ReadReady","","Pending message available on channel.",0,null],[13,"InvalidChannel","","Channel handle does not identify the read half of aâ€¦",0,null],[13,"Orphaned","","Channel has no extant write halves (and is empty).",0,null],[4,"OakStatus","","Status values exchanged as i32 values across the Node Wasmâ€¦",null,null],[13,"Unspecified","","",1,null],[13,"Ok","","Success.",1,null],[13,"ErrBadHandle","","Invalid handle provided.",1,null],[13,"ErrInvalidArgs","","Arguments invalid.",1,null],[13,"ErrChannelClosed","","Channel has been closed.",1,null],[13,"ErrBufferTooSmall","","Provided buffer was too small for operation (an outputâ€¦",1,null],[13,"ErrHandleSpaceTooSmall","","Provided handle space was too small for operation (anâ€¦",1,null],[13,"ErrOutOfRange","","Argument out of valid range.",1,null],[13,"ErrInternal","","Internal error.",1,null],[13,"ErrTerminated","","Node terminated.",1,null],[13,"ErrChannelEmpty","","Channel has no messages available to read.",1,null],[13,"ErrPermissionDenied","","The node does not have sufficient permissions to performâ€¦",1,null],[3,"Handle","","Handle used to identify read or write channel halves.",null,null],[3,"ReadHandle","","Wrapper for a handle to the read half of a channel.",null,null],[12,"handle","","",2,null],[3,"WriteHandle","","Wrapper for a handle to the send half of a channel.",null,null],[12,"handle","","",3,null],[4,"OakError","","Generic Oak error.",null,null],[13,"ProtobufError","","",4,null],[13,"OakStatus","","",4,null],[13,"IoError","","",4,null],[5,"wait_on_channels","","Wait for one or more of the provided handles to becomeâ€¦",null,[[],[["oakstatus"],["vec",["channelreadstatus"]],["result",["vec","oakstatus"]]]]],[5,"channel_read","","Read a message from a channel without blocking.",null,[[["vec"],["vec"],["readhandle"]],[["oakstatus"],["result",["oakstatus"]]]]],[5,"channel_write","","Write a message to a channel.",null,[[["writehandle"]],[["oakstatus"],["result",["oakstatus"]]]]],[5,"channel_create","","Create a new unidirectional channel.",null,[[],[["oakstatus"],["result",["oakstatus"]]]]],[5,"channel_close","","Close the specified channel [`Handle`].",null,[[["handle"]],[["oakstatus"],["result",["oakstatus"]]]]],[5,"node_create","","Create a new Node running the configuration identified byâ€¦",null,[[["str"],["readhandle"]],[["oakstatus"],["result",["oakstatus"]]]]],[5,"random_get","","Fill a buffer with random data.",null,[[],[["oakstatus"],["result",["oakstatus"]]]]],[5,"result_from_status","","Convert a status returned from a host function call to aâ€¦",null,[[["t"],["i32"]],[["result",["oakstatus"]],["oakstatus"]]]],[5,"set_panic_hook","","Install a panic hook that logs [panic information].",null,[[]]],[5,"run_event_loop","","Run an event loop on the provided `node`:",null,[[["node"],["decodable"],["u64"]]]],[0,"grpc","","Functionality to help Oak Nodes interact with gRPC.",null,null],[3,"Invocation","oak::grpc","A gRPC invocation, consisting of exactly two channels: oneâ€¦",null,null],[12,"request_receiver","","",5,null],[12,"response_sender","","",5,null],[3,"ChannelResponseWriter","","Channel-holding object that encapsulates response messagesâ€¦",null,null],[4,"WriteMode","","Indicate whether a write method should leave the currentâ€¦",null,null],[13,"KeepOpen","","",6,null],[13,"Close","","",6,null],[5,"build_status","","Helper to create a gRPC status object.",null,[[["str"],["code"]],["status"]]],[5,"encap_request","","Encapsulate a protocol buffer message in a GrpcRequestâ€¦",null,[[["str"],["t"],["option",["str"]]],[["option",["grpcrequest"]],["grpcrequest"]]]],[5,"decap_response","","Extract a protocol buffer message from a GrpcResponseâ€¦",null,[[["grpcresponse"]],["result"]]],[5,"invoke_grpc_method_stream","","Helper to inject a (single) gRPC request message via aâ€¦",null,[[["str"],["sender"],["r"],["option",["str"]]],[["result",["receiver"]],["receiver",["grpcresponse"]]]]],[5,"invoke_grpc_method","","Helper to inject a (single) gRPC request message via aâ€¦",null,[[["str"],["sender"],["r"],["option",["str"]]],["result"]]],[5,"handle_req_rsp","","Generic function that handles request deserialization andâ€¦",null,[[["c"],["channelresponsewriter"]]]],[5,"handle_req_stream","","Generic function that handles request deserialization andâ€¦",null,[[["c"],["channelresponsewriter"]]]],[5,"handle_stream_rsp","","Generic function that handles request deserialization andâ€¦",null,[[["c"],["channelresponsewriter"]]]],[5,"handle_stream_stream","","Generic function that handles request deserialization andâ€¦",null,[[["c"],["channelresponsewriter"]]]],[5,"init_default","","Initialize a gRPC pseudo-node with the defaultâ€¦",null,[[]]],[5,"init","","Initializes a gRPC server pseudo-node and passes it aâ€¦",null,[[["str"]],[["oakstatus"],["readhandle"],["result",["readhandle","oakstatus"]]]]],[0,"client","","",null,null],[3,"Client","oak::grpc::client","Client for a gRPC service in another Node.",null,null],[12,"invocation_sender","","",7,null],[11,"new","","Create a new Node that implements a gRPC service, and ifâ€¦",7,[[["str"]],[["option",["client"]],["client"]]]],[6,"Result","oak::grpc","Result type that uses a [`proto::status::Status`] type forâ€¦",null,null],[17,"DEFAULT_CONFIG_NAME","","Default name for predefined node configuration thatâ€¦",null,null],[8,"ServerNode","","Trait for Oak Nodes that act as a gRPC services.",null,null],[10,"invoke","","Process a single gRPC method invocation.",8,[[["str"],["channelresponsewriter"],["self"]]]],[11,"new","","",9,[[["sender",["grpcresponse"]],["grpcresponse"]],["self"]]],[11,"handle","","Retrieve the Oak handle underlying the writer object.",9,[[],["writehandle"]]],[11,"write","","Write out a gRPC response and optionally close out theâ€¦",9,[[["self"],["t"],["writemode"]],[["oakerror"],["result",["oakerror"]]]]],[11,"write_empty","","Write an empty gRPC response and optionally close out theâ€¦",9,[[["self"],["writemode"]],[["oakerror"],["result",["oakerror"]]]]],[11,"close","","Close out the gRPC method invocation with the given finalâ€¦",9,[[["self"],["result"]],[["oakerror"],["result",["oakerror"]]]]],[0,"io","oak","Wrappers for Oak SDK types to allow their use withâ€¦",null,null],[3,"Receiver","oak::io","Wrapper for a handle to the read half of a channel,â€¦",null,null],[12,"handle","","",10,null],[3,"Sender","","Wrapper for a handle to the send half of a channel,â€¦",null,null],[12,"handle","","",11,null],[3,"Message","","A simple holder for bytes + handles, using internallyâ€¦",null,null],[12,"bytes","","",12,null],[12,"handles","","",12,null],[5,"channel_create","","Create a new channel for transmission of `Encodable` andâ€¦",null,[[],[["result",["oakstatus"]],["oakstatus"]]]],[5,"error_from_nonok_status","","Map a non-OK [`OakStatus`] value to the nearest availableâ€¦",null,[[["oakstatus"]],["error"]]],[11,"new","","",10,[[["readhandle"]],["self"]]],[11,"close","","Close the underlying channel used by this receiver.",10,[[["self"]],[["oakstatus"],["result",["oakstatus"]]]]],[11,"receive","","Attempt to wait for a value on this receiver, blocking ifâ€¦",10,[[["self"]],[["result",["oakerror"]],["oakerror"]]]],[11,"try_receive","","Attempt to read a value from this receiver, withoutâ€¦",10,[[["self"]],[["result",["oakerror"]],["oakerror"]]]],[11,"wait","","Wait for a value to be available from this receiver.",10,[[["self"]],[["oakstatus"],["result",["oakstatus"]]]]],[11,"new","","",11,[[["writehandle"]],["self"]]],[11,"close","","Close the underlying channel used by this sender.",11,[[["self"]],[["oakstatus"],["result",["oakstatus"]]]]],[11,"send","","Attempt to send a value on this sender.",11,[[["t"],["self"]],[["oakerror"],["result",["oakerror"]]]]],[8,"Decodable","","A trait for objects that can be decoded from bytes +â€¦",null,null],[10,"decode","","",13,[[["message"]],[["result",["oakerror"]],["oakerror"]]]],[8,"Encodable","","A trait for objects that can be encoded as bytes + handles.",null,null],[10,"encode","","",14,[[["self"]],[["message"],["oakerror"],["result",["message","oakerror"]]]]],[0,"logger","oak","A logger that sends output to an Oak logging channel, forâ€¦",null,null],[5,"init_default","oak::logger","Initialize Node-wide default logging.",null,[[]]],[5,"init","","Initialize Node-wide logging via a channel to a loggingâ€¦",null,[[["str"],["level"]],[["result",["setloggererror"]],["setloggererror"]]]],[17,"DEFAULT_CONFIG_NAME","","Default name for predefined node configuration thatâ€¦",null,null],[0,"proto","oak","",null,null],[0,"code","oak::proto","Generated file from `third_party/google/rpc/code.proto`",null,null],[4,"Code","oak::proto::code","Generated files are compatible only with the same versionâ€¦",null,null],[13,"OK","","",15,null],[13,"CANCELLED","","",15,null],[13,"UNKNOWN","","",15,null],[13,"INVALID_ARGUMENT","","",15,null],[13,"DEADLINE_EXCEEDED","","",15,null],[13,"NOT_FOUND","","",15,null],[13,"ALREADY_EXISTS","","",15,null],[13,"PERMISSION_DENIED","","",15,null],[13,"UNAUTHENTICATED","","",15,null],[13,"RESOURCE_EXHAUSTED","","",15,null],[13,"FAILED_PRECONDITION","","",15,null],[13,"ABORTED","","",15,null],[13,"OUT_OF_RANGE","","",15,null],[13,"UNIMPLEMENTED","","",15,null],[13,"INTERNAL","","",15,null],[13,"UNAVAILABLE","","",15,null],[13,"DATA_LOSS","","",15,null],[5,"file_descriptor_proto","","",null,[[],["filedescriptorproto"]]],[0,"grpc_encap","oak::proto","Generated file from `oak/proto/grpc_encap.proto`",null,null],[3,"GrpcRequest","oak::proto::grpc_encap","Generated files are compatible only with the same versionâ€¦",null,null],[12,"method_name","","",16,null],[12,"req_msg","","",16,null],[12,"last","","",16,null],[12,"unknown_fields","","",16,null],[12,"cached_size","","",16,null],[3,"GrpcResponse","","",null,null],[12,"rsp_msg","","",17,null],[12,"status","","",17,null],[12,"last","","",17,null],[12,"unknown_fields","","",17,null],[12,"cached_size","","",17,null],[5,"file_descriptor_proto","","",null,[[],["filedescriptorproto"]]],[11,"new","","",16,[[],["grpcrequest"]]],[11,"get_method_name","","",16,[[["self"]],["str"]]],[11,"clear_method_name","","",16,[[["self"]]]],[11,"set_method_name","","",16,[[["self"],["string"]]]],[11,"mut_method_name","","",16,[[["self"]],["string"]]],[11,"take_method_name","","",16,[[["self"]],["string"]]],[11,"get_req_msg","","",16,[[["self"]],["any"]]],[11,"clear_req_msg","","",16,[[["self"]]]],[11,"has_req_msg","","",16,[[["self"]],["bool"]]],[11,"set_req_msg","","",16,[[["self"],["any"]]]],[11,"mut_req_msg","","",16,[[["self"]],["any"]]],[11,"take_req_msg","","",16,[[["self"]],["any"]]],[11,"get_last","","",16,[[["self"]],["bool"]]],[11,"clear_last","","",16,[[["self"]]]],[11,"set_last","","",16,[[["self"],["bool"]]]],[11,"new","","",17,[[],["grpcresponse"]]],[11,"get_rsp_msg","","",17,[[["self"]],["any"]]],[11,"clear_rsp_msg","","",17,[[["self"]]]],[11,"has_rsp_msg","","",17,[[["self"]],["bool"]]],[11,"set_rsp_msg","","",17,[[["self"],["any"]]]],[11,"mut_rsp_msg","","",17,[[["self"]],["any"]]],[11,"take_rsp_msg","","",17,[[["self"]],["any"]]],[11,"get_status","","",17,[[["self"]],["status"]]],[11,"clear_status","","",17,[[["self"]]]],[11,"has_status","","",17,[[["self"]],["bool"]]],[11,"set_status","","",17,[[["status"],["self"]]]],[11,"mut_status","","",17,[[["self"]],["status"]]],[11,"take_status","","",17,[[["self"]],["status"]]],[11,"get_last","","",17,[[["self"]],["bool"]]],[11,"clear_last","","",17,[[["self"]]]],[11,"set_last","","",17,[[["self"],["bool"]]]],[0,"policy","oak::proto","Generated file from `oak/proto/policy.proto`",null,null],[3,"Label","oak::proto::policy","Generated files are compatible only with the same versionâ€¦",null,null],[12,"secrecy_tags","","",18,null],[12,"integrity_tags","","",18,null],[12,"unknown_fields","","",18,null],[12,"cached_size","","",18,null],[3,"Tag","","",null,null],[12,"tag","","",19,null],[12,"unknown_fields","","",19,null],[12,"cached_size","","",19,null],[3,"GrpcTag","","",null,null],[12,"authorization_bearer_token_hmac","","",20,null],[12,"unknown_fields","","",20,null],[12,"cached_size","","",20,null],[3,"WebAssemblyModuleTag","","",null,null],[12,"module_attestation","","",21,null],[12,"unknown_fields","","",21,null],[12,"cached_size","","",21,null],[3,"TlsEndpointTag","","",null,null],[12,"certificate_subject_alternative_name","","",22,null],[12,"unknown_fields","","",22,null],[12,"cached_size","","",22,null],[4,"Tag_oneof_tag","","",null,null],[13,"grpc_tag","","",23,null],[13,"web_assembly_module_tag","","",23,null],[13,"tls_endpoint_tag","","",23,null],[5,"file_descriptor_proto","","",null,[[],["filedescriptorproto"]]],[11,"new","","",18,[[],["label"]]],[11,"get_secrecy_tags","","",18,[[["self"]]]],[11,"clear_secrecy_tags","","",18,[[["self"]]]],[11,"set_secrecy_tags","","",18,[[["repeatedfield",["tag"]],["self"],["tag"]]]],[11,"mut_secrecy_tags","","",18,[[["self"]],["repeatedfield"]]],[11,"take_secrecy_tags","","",18,[[["self"]],[["tag"],["repeatedfield",["tag"]]]]],[11,"get_integrity_tags","","",18,[[["self"]]]],[11,"clear_integrity_tags","","",18,[[["self"]]]],[11,"set_integrity_tags","","",18,[[["repeatedfield",["tag"]],["self"],["tag"]]]],[11,"mut_integrity_tags","","",18,[[["self"]],["repeatedfield"]]],[11,"take_integrity_tags","","",18,[[["self"]],[["tag"],["repeatedfield",["tag"]]]]],[11,"new","","",19,[[],["tag"]]],[11,"get_grpc_tag","","",19,[[["self"]],["grpctag"]]],[11,"clear_grpc_tag","","",19,[[["self"]]]],[11,"has_grpc_tag","","",19,[[["self"]],["bool"]]],[11,"set_grpc_tag","","",19,[[["self"],["grpctag"]]]],[11,"mut_grpc_tag","","",19,[[["self"]],["grpctag"]]],[11,"take_grpc_tag","","",19,[[["self"]],["grpctag"]]],[11,"get_web_assembly_module_tag","","",19,[[["self"]],["webassemblymoduletag"]]],[11,"clear_web_assembly_module_tag","","",19,[[["self"]]]],[11,"has_web_assembly_module_tag","","",19,[[["self"]],["bool"]]],[11,"set_web_assembly_module_tag","","",19,[[["webassemblymoduletag"],["self"]]]],[11,"mut_web_assembly_module_tag","","",19,[[["self"]],["webassemblymoduletag"]]],[11,"take_web_assembly_module_tag","","",19,[[["self"]],["webassemblymoduletag"]]],[11,"get_tls_endpoint_tag","","",19,[[["self"]],["tlsendpointtag"]]],[11,"clear_tls_endpoint_tag","","",19,[[["self"]]]],[11,"has_tls_endpoint_tag","","",19,[[["self"]],["bool"]]],[11,"set_tls_endpoint_tag","","",19,[[["self"],["tlsendpointtag"]]]],[11,"mut_tls_endpoint_tag","","",19,[[["self"]],["tlsendpointtag"]]],[11,"take_tls_endpoint_tag","","",19,[[["self"]],["tlsendpointtag"]]],[11,"new","","",20,[[],["grpctag"]]],[11,"get_authorization_bearer_token_hmac","","",20,[[["self"]]]],[11,"clear_authorization_bearer_token_hmac","","",20,[[["self"]]]],[11,"set_authorization_bearer_token_hmac","","",20,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_authorization_bearer_token_hmac","","",20,[[["self"]],["vec"]]],[11,"take_authorization_bearer_token_hmac","","",20,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"new","","",21,[[],["webassemblymoduletag"]]],[11,"get_module_attestation","","",21,[[["self"]]]],[11,"clear_module_attestation","","",21,[[["self"]]]],[11,"set_module_attestation","","",21,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_module_attestation","","",21,[[["self"]],["vec"]]],[11,"take_module_attestation","","",21,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"new","","",22,[[],["tlsendpointtag"]]],[11,"get_certificate_subject_alternative_name","","",22,[[["self"]],["str"]]],[11,"clear_certificate_subject_alternative_name","","",22,[[["self"]]]],[11,"set_certificate_subject_alternative_name","","",22,[[["self"],["string"]]]],[11,"mut_certificate_subject_alternative_name","","",22,[[["self"]],["string"]]],[11,"take_certificate_subject_alternative_name","","",22,[[["self"]],["string"]]],[0,"status","oak::proto","Generated file from `third_party/google/rpc/status.proto`",null,null],[3,"Status","oak::proto::status","Generated files are compatible only with the same versionâ€¦",null,null],[12,"code","","",24,null],[12,"message","","",24,null],[12,"details","","",24,null],[12,"unknown_fields","","",24,null],[12,"cached_size","","",24,null],[5,"file_descriptor_proto","","",null,[[],["filedescriptorproto"]]],[11,"new","","",24,[[],["status"]]],[11,"get_code","","",24,[[["self"]],["i32"]]],[11,"clear_code","","",24,[[["self"]]]],[11,"set_code","","",24,[[["self"],["i32"]]]],[11,"get_message","","",24,[[["self"]],["str"]]],[11,"clear_message","","",24,[[["self"]]]],[11,"set_message","","",24,[[["self"],["string"]]]],[11,"mut_message","","",24,[[["self"]],["string"]]],[11,"take_message","","",24,[[["self"]],["string"]]],[11,"get_details","","",24,[[["self"]]]],[11,"clear_details","","",24,[[["self"]]]],[11,"set_details","","",24,[[["self"],["repeatedfield",["any"]],["any"]]]],[11,"mut_details","","",24,[[["self"]],["repeatedfield"]]],[11,"take_details","","",24,[[["self"]],[["repeatedfield",["any"]],["any"]]]],[0,"storage","oak::proto","Generated file from `oak/proto/storage.proto`",null,null],[3,"StorageReadRequest","oak::proto::storage","Generated files are compatible only with the same versionâ€¦",null,null],[12,"storage_id","","",25,null],[12,"transaction_id","","",25,null],[12,"item_name","","",25,null],[12,"unknown_fields","","",25,null],[12,"cached_size","","",25,null],[3,"StorageReadResponse","","",null,null],[12,"item_value","","",26,null],[12,"unknown_fields","","",26,null],[12,"cached_size","","",26,null],[3,"StorageWriteRequest","","",null,null],[12,"storage_id","","",27,null],[12,"transaction_id","","",27,null],[12,"item_name","","",27,null],[12,"item_value","","",27,null],[12,"unknown_fields","","",27,null],[12,"cached_size","","",27,null],[3,"StorageWriteResponse","","",null,null],[12,"unknown_fields","","",28,null],[12,"cached_size","","",28,null],[3,"StorageDeleteRequest","","",null,null],[12,"storage_id","","",29,null],[12,"transaction_id","","",29,null],[12,"item_name","","",29,null],[12,"unknown_fields","","",29,null],[12,"cached_size","","",29,null],[3,"StorageDeleteResponse","","",null,null],[12,"unknown_fields","","",30,null],[12,"cached_size","","",30,null],[3,"StorageBeginRequest","","",null,null],[12,"storage_id","","",31,null],[12,"unknown_fields","","",31,null],[12,"cached_size","","",31,null],[3,"StorageBeginResponse","","",null,null],[12,"transaction_id","","",32,null],[12,"unknown_fields","","",32,null],[12,"cached_size","","",32,null],[3,"StorageCommitRequest","","",null,null],[12,"storage_id","","",33,null],[12,"transaction_id","","",33,null],[12,"unknown_fields","","",33,null],[12,"cached_size","","",33,null],[3,"StorageCommitResponse","","",null,null],[12,"unknown_fields","","",34,null],[12,"cached_size","","",34,null],[3,"StorageRollbackRequest","","",null,null],[12,"storage_id","","",35,null],[12,"transaction_id","","",35,null],[12,"unknown_fields","","",35,null],[12,"cached_size","","",35,null],[3,"StorageRollbackResponse","","",null,null],[12,"unknown_fields","","",36,null],[12,"cached_size","","",36,null],[5,"file_descriptor_proto","","",null,[[],["filedescriptorproto"]]],[11,"new","","",25,[[],["storagereadrequest"]]],[11,"get_storage_id","","",25,[[["self"]]]],[11,"clear_storage_id","","",25,[[["self"]]]],[11,"set_storage_id","","",25,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_storage_id","","",25,[[["self"]],["vec"]]],[11,"take_storage_id","","",25,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_transaction_id","","",25,[[["self"]]]],[11,"clear_transaction_id","","",25,[[["self"]]]],[11,"set_transaction_id","","",25,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_transaction_id","","",25,[[["self"]],["vec"]]],[11,"take_transaction_id","","",25,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_item_name","","",25,[[["self"]]]],[11,"clear_item_name","","",25,[[["self"]]]],[11,"set_item_name","","",25,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_item_name","","",25,[[["self"]],["vec"]]],[11,"take_item_name","","",25,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"new","","",26,[[],["storagereadresponse"]]],[11,"get_item_value","","",26,[[["self"]]]],[11,"clear_item_value","","",26,[[["self"]]]],[11,"set_item_value","","",26,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_item_value","","",26,[[["self"]],["vec"]]],[11,"take_item_value","","",26,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"new","","",27,[[],["storagewriterequest"]]],[11,"get_storage_id","","",27,[[["self"]]]],[11,"clear_storage_id","","",27,[[["self"]]]],[11,"set_storage_id","","",27,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_storage_id","","",27,[[["self"]],["vec"]]],[11,"take_storage_id","","",27,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_transaction_id","","",27,[[["self"]]]],[11,"clear_transaction_id","","",27,[[["self"]]]],[11,"set_transaction_id","","",27,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_transaction_id","","",27,[[["self"]],["vec"]]],[11,"take_transaction_id","","",27,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_item_name","","",27,[[["self"]]]],[11,"clear_item_name","","",27,[[["self"]]]],[11,"set_item_name","","",27,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_item_name","","",27,[[["self"]],["vec"]]],[11,"take_item_name","","",27,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_item_value","","",27,[[["self"]]]],[11,"clear_item_value","","",27,[[["self"]]]],[11,"set_item_value","","",27,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_item_value","","",27,[[["self"]],["vec"]]],[11,"take_item_value","","",27,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"new","","",28,[[],["storagewriteresponse"]]],[11,"new","","",29,[[],["storagedeleterequest"]]],[11,"get_storage_id","","",29,[[["self"]]]],[11,"clear_storage_id","","",29,[[["self"]]]],[11,"set_storage_id","","",29,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_storage_id","","",29,[[["self"]],["vec"]]],[11,"take_storage_id","","",29,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_transaction_id","","",29,[[["self"]]]],[11,"clear_transaction_id","","",29,[[["self"]]]],[11,"set_transaction_id","","",29,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_transaction_id","","",29,[[["self"]],["vec"]]],[11,"take_transaction_id","","",29,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_item_name","","",29,[[["self"]]]],[11,"clear_item_name","","",29,[[["self"]]]],[11,"set_item_name","","",29,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_item_name","","",29,[[["self"]],["vec"]]],[11,"take_item_name","","",29,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"new","","",30,[[],["storagedeleteresponse"]]],[11,"new","","",31,[[],["storagebeginrequest"]]],[11,"get_storage_id","","",31,[[["self"]]]],[11,"clear_storage_id","","",31,[[["self"]]]],[11,"set_storage_id","","",31,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_storage_id","","",31,[[["self"]],["vec"]]],[11,"take_storage_id","","",31,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"new","","",32,[[],["storagebeginresponse"]]],[11,"get_transaction_id","","",32,[[["self"]]]],[11,"clear_transaction_id","","",32,[[["self"]]]],[11,"set_transaction_id","","",32,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_transaction_id","","",32,[[["self"]],["vec"]]],[11,"take_transaction_id","","",32,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"new","","",33,[[],["storagecommitrequest"]]],[11,"get_storage_id","","",33,[[["self"]]]],[11,"clear_storage_id","","",33,[[["self"]]]],[11,"set_storage_id","","",33,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_storage_id","","",33,[[["self"]],["vec"]]],[11,"take_storage_id","","",33,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_transaction_id","","",33,[[["self"]]]],[11,"clear_transaction_id","","",33,[[["self"]]]],[11,"set_transaction_id","","",33,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_transaction_id","","",33,[[["self"]],["vec"]]],[11,"take_transaction_id","","",33,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"new","","",34,[[],["storagecommitresponse"]]],[11,"new","","",35,[[],["storagerollbackrequest"]]],[11,"get_storage_id","","",35,[[["self"]]]],[11,"clear_storage_id","","",35,[[["self"]]]],[11,"set_storage_id","","",35,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_storage_id","","",35,[[["self"]],["vec"]]],[11,"take_storage_id","","",35,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_transaction_id","","",35,[[["self"]]]],[11,"clear_transaction_id","","",35,[[["self"]]]],[11,"set_transaction_id","","",35,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_transaction_id","","",35,[[["self"]],["vec"]]],[11,"take_transaction_id","","",35,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"new","","",36,[[],["storagerollbackresponse"]]],[0,"storage_channel","oak::proto","Generated file from `oak/proto/storage_channel.proto`",null,null],[3,"StorageItem","oak::proto::storage_channel","Generated files are compatible only with the same versionâ€¦",null,null],[12,"name","","",37,null],[12,"value","","",37,null],[12,"policy","","",37,null],[12,"unknown_fields","","",37,null],[12,"cached_size","","",37,null],[3,"StorageChannelReadRequest","","",null,null],[12,"storage_name","","",38,null],[12,"transaction_id","","",38,null],[12,"item","","",38,null],[12,"unknown_fields","","",38,null],[12,"cached_size","","",38,null],[3,"StorageChannelReadResponse","","",null,null],[12,"item","","",39,null],[12,"unknown_fields","","",39,null],[12,"cached_size","","",39,null],[3,"StorageChannelWriteRequest","","",null,null],[12,"storage_name","","",40,null],[12,"transaction_id","","",40,null],[12,"item","","",40,null],[12,"unknown_fields","","",40,null],[12,"cached_size","","",40,null],[3,"StorageChannelWriteResponse","","",null,null],[12,"unknown_fields","","",41,null],[12,"cached_size","","",41,null],[3,"StorageChannelDeleteRequest","","",null,null],[12,"storage_name","","",42,null],[12,"transaction_id","","",42,null],[12,"item","","",42,null],[12,"unknown_fields","","",42,null],[12,"cached_size","","",42,null],[3,"StorageChannelDeleteResponse","","",null,null],[12,"unknown_fields","","",43,null],[12,"cached_size","","",43,null],[3,"StorageChannelBeginRequest","","",null,null],[12,"storage_name","","",44,null],[12,"unknown_fields","","",44,null],[12,"cached_size","","",44,null],[3,"StorageChannelBeginResponse","","",null,null],[12,"transaction_id","","",45,null],[12,"unknown_fields","","",45,null],[12,"cached_size","","",45,null],[3,"StorageChannelCommitRequest","","",null,null],[12,"storage_name","","",46,null],[12,"transaction_id","","",46,null],[12,"unknown_fields","","",46,null],[12,"cached_size","","",46,null],[3,"StorageChannelCommitResponse","","",null,null],[12,"unknown_fields","","",47,null],[12,"cached_size","","",47,null],[3,"StorageChannelRollbackRequest","","",null,null],[12,"storage_name","","",48,null],[12,"storage_id","","",48,null],[12,"transaction_id","","",48,null],[12,"unknown_fields","","",48,null],[12,"cached_size","","",48,null],[3,"StorageChannelRollbackResponse","","",null,null],[12,"unknown_fields","","",49,null],[12,"cached_size","","",49,null],[5,"file_descriptor_proto","","",null,[[],["filedescriptorproto"]]],[11,"new","","",37,[[],["storageitem"]]],[11,"get_name","","",37,[[["self"]]]],[11,"clear_name","","",37,[[["self"]]]],[11,"set_name","","",37,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_name","","",37,[[["self"]],["vec"]]],[11,"take_name","","",37,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_value","","",37,[[["self"]]]],[11,"clear_value","","",37,[[["self"]]]],[11,"set_value","","",37,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_value","","",37,[[["self"]],["vec"]]],[11,"take_value","","",37,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_policy","","",37,[[["self"]],["label"]]],[11,"clear_policy","","",37,[[["self"]]]],[11,"has_policy","","",37,[[["self"]],["bool"]]],[11,"set_policy","","",37,[[["self"],["label"]]]],[11,"mut_policy","","",37,[[["self"]],["label"]]],[11,"take_policy","","",37,[[["self"]],["label"]]],[11,"new","","",38,[[],["storagechannelreadrequest"]]],[11,"get_storage_name","","",38,[[["self"]]]],[11,"clear_storage_name","","",38,[[["self"]]]],[11,"set_storage_name","","",38,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_storage_name","","",38,[[["self"]],["vec"]]],[11,"take_storage_name","","",38,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_transaction_id","","",38,[[["self"]]]],[11,"clear_transaction_id","","",38,[[["self"]]]],[11,"set_transaction_id","","",38,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_transaction_id","","",38,[[["self"]],["vec"]]],[11,"take_transaction_id","","",38,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_item","","",38,[[["self"]],["storageitem"]]],[11,"clear_item","","",38,[[["self"]]]],[11,"has_item","","",38,[[["self"]],["bool"]]],[11,"set_item","","",38,[[["self"],["storageitem"]]]],[11,"mut_item","","",38,[[["self"]],["storageitem"]]],[11,"take_item","","",38,[[["self"]],["storageitem"]]],[11,"new","","",39,[[],["storagechannelreadresponse"]]],[11,"get_item","","",39,[[["self"]],["storageitem"]]],[11,"clear_item","","",39,[[["self"]]]],[11,"has_item","","",39,[[["self"]],["bool"]]],[11,"set_item","","",39,[[["self"],["storageitem"]]]],[11,"mut_item","","",39,[[["self"]],["storageitem"]]],[11,"take_item","","",39,[[["self"]],["storageitem"]]],[11,"new","","",40,[[],["storagechannelwriterequest"]]],[11,"get_storage_name","","",40,[[["self"]]]],[11,"clear_storage_name","","",40,[[["self"]]]],[11,"set_storage_name","","",40,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_storage_name","","",40,[[["self"]],["vec"]]],[11,"take_storage_name","","",40,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_transaction_id","","",40,[[["self"]]]],[11,"clear_transaction_id","","",40,[[["self"]]]],[11,"set_transaction_id","","",40,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_transaction_id","","",40,[[["self"]],["vec"]]],[11,"take_transaction_id","","",40,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_item","","",40,[[["self"]],["storageitem"]]],[11,"clear_item","","",40,[[["self"]]]],[11,"has_item","","",40,[[["self"]],["bool"]]],[11,"set_item","","",40,[[["self"],["storageitem"]]]],[11,"mut_item","","",40,[[["self"]],["storageitem"]]],[11,"take_item","","",40,[[["self"]],["storageitem"]]],[11,"new","","",41,[[],["storagechannelwriteresponse"]]],[11,"new","","",42,[[],["storagechanneldeleterequest"]]],[11,"get_storage_name","","",42,[[["self"]]]],[11,"clear_storage_name","","",42,[[["self"]]]],[11,"set_storage_name","","",42,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_storage_name","","",42,[[["self"]],["vec"]]],[11,"take_storage_name","","",42,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_transaction_id","","",42,[[["self"]]]],[11,"clear_transaction_id","","",42,[[["self"]]]],[11,"set_transaction_id","","",42,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_transaction_id","","",42,[[["self"]],["vec"]]],[11,"take_transaction_id","","",42,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_item","","",42,[[["self"]],["storageitem"]]],[11,"clear_item","","",42,[[["self"]]]],[11,"has_item","","",42,[[["self"]],["bool"]]],[11,"set_item","","",42,[[["self"],["storageitem"]]]],[11,"mut_item","","",42,[[["self"]],["storageitem"]]],[11,"take_item","","",42,[[["self"]],["storageitem"]]],[11,"new","","",43,[[],["storagechanneldeleteresponse"]]],[11,"new","","",44,[[],["storagechannelbeginrequest"]]],[11,"get_storage_name","","",44,[[["self"]]]],[11,"clear_storage_name","","",44,[[["self"]]]],[11,"set_storage_name","","",44,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_storage_name","","",44,[[["self"]],["vec"]]],[11,"take_storage_name","","",44,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"new","","",45,[[],["storagechannelbeginresponse"]]],[11,"get_transaction_id","","",45,[[["self"]]]],[11,"clear_transaction_id","","",45,[[["self"]]]],[11,"set_transaction_id","","",45,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_transaction_id","","",45,[[["self"]],["vec"]]],[11,"take_transaction_id","","",45,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"new","","",46,[[],["storagechannelcommitrequest"]]],[11,"get_storage_name","","",46,[[["self"]]]],[11,"clear_storage_name","","",46,[[["self"]]]],[11,"set_storage_name","","",46,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_storage_name","","",46,[[["self"]],["vec"]]],[11,"take_storage_name","","",46,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_transaction_id","","",46,[[["self"]]]],[11,"clear_transaction_id","","",46,[[["self"]]]],[11,"set_transaction_id","","",46,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_transaction_id","","",46,[[["self"]],["vec"]]],[11,"take_transaction_id","","",46,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"new","","",47,[[],["storagechannelcommitresponse"]]],[11,"new","","",48,[[],["storagechannelrollbackrequest"]]],[11,"get_storage_name","","",48,[[["self"]]]],[11,"clear_storage_name","","",48,[[["self"]]]],[11,"set_storage_name","","",48,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_storage_name","","",48,[[["self"]],["vec"]]],[11,"take_storage_name","","",48,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_storage_id","","",48,[[["self"]]]],[11,"clear_storage_id","","",48,[[["self"]]]],[11,"set_storage_id","","",48,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_storage_id","","",48,[[["self"]],["vec"]]],[11,"take_storage_id","","",48,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_transaction_id","","",48,[[["self"]]]],[11,"clear_transaction_id","","",48,[[["self"]]]],[11,"set_transaction_id","","",48,[[["vec",["u8"]],["self"],["u8"]]]],[11,"mut_transaction_id","","",48,[[["self"]],["vec"]]],[11,"take_transaction_id","","",48,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"new","","",49,[[],["storagechannelrollbackresponse"]]],[0,"log","oak::proto","Generated file from `oak/proto/log.proto`",null,null],[3,"LogMessage","oak::proto::log","Generated files are compatible only with the same versionâ€¦",null,null],[12,"file","","",50,null],[12,"line","","",50,null],[12,"level","","",50,null],[12,"message","","",50,null],[12,"unknown_fields","","",50,null],[12,"cached_size","","",50,null],[4,"Level","","",null,null],[13,"UNKNOWN_LEVEL","","",51,null],[13,"ERROR","","",51,null],[13,"WARN","","",51,null],[13,"INFO","","",51,null],[13,"DEBUG","","",51,null],[13,"TRACE","","",51,null],[5,"file_descriptor_proto","","",null,[[],["filedescriptorproto"]]],[11,"new","","",50,[[],["logmessage"]]],[11,"get_file","","",50,[[["self"]],["str"]]],[11,"clear_file","","",50,[[["self"]]]],[11,"set_file","","",50,[[["self"],["string"]]]],[11,"mut_file","","",50,[[["self"]],["string"]]],[11,"take_file","","",50,[[["self"]],["string"]]],[11,"get_line","","",50,[[["self"]],["u32"]]],[11,"clear_line","","",50,[[["self"]]]],[11,"set_line","","",50,[[["self"],["u32"]]]],[11,"get_level","","",50,[[["self"]],["level"]]],[11,"clear_level","","",50,[[["self"]]]],[11,"set_level","","",50,[[["level"],["self"]]]],[11,"get_message","","",50,[[["self"]],["str"]]],[11,"clear_message","","",50,[[["self"]]]],[11,"set_message","","",50,[[["self"],["string"]]]],[11,"mut_message","","",50,[[["self"]],["string"]]],[11,"take_message","","",50,[[["self"]],["string"]]],[0,"rand","oak","Functionality to allow use of the rand crate in Oak.",null,null],[3,"OakRng","oak::rand","",null,null],[0,"storage","oak","Helper library for accessing Oak storage services.",null,null],[3,"Storage","oak::storage","Local representation of the connection to an externalâ€¦",null,null],[17,"DEFAULT_CONFIG_NAME","","Default name for predefined node config that correspondsâ€¦",null,null],[11,"default","","Create a default `Storage` instance assuming the defaultâ€¦",52,[[],[["option",["storage"]],["storage"]]]],[11,"new","","Create a `Storage` instance using the given nameâ€¦",52,[[["str"]],[["option",["storage"]],["storage"]]]],[11,"read","","Read the value associated with the given `name` from theâ€¦",52,[[["self"]],[["vec",["u8"]],["result",["vec"]]]]],[11,"write","","Set the value associated with the given `name` from theâ€¦",52,[[["self"]],["result"]]],[11,"delete","","Delete the value associated with the given `name` from theâ€¦",52,[[["self"]],["result"]]],[8,"Node","oak","Trait implemented by all Oak Nodes.",null,null],[10,"handle_command","","",53,[[["self"],["t"]],[["result",["oakerror"]],["oakerror"]]]],[11,"from_raw","","When using the Oak SDK, this method should not need to beâ€¦",54,[[["u64"]],["handle"]]],[11,"is_valid","","Check this handle is valid.",54,[[],["bool"]]],[11,"invalid","","Returns an intentionally invalid handle.",54,[[],["handle"]]],[14,"entrypoint","","Register a new node entrypoint.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","oak::grpc","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","oak::grpc::client","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","oak::io","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","oak::proto::code","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","oak::proto::grpc_encap","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","oak::proto::policy","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","oak::proto::status","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","oak::proto::storage","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","oak::proto::storage_channel","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","oak::proto::log","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","oak::rand","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","oak::storage","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"hash","oak","",1,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"eq","","",1,[[["oakstatus"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["channelreadstatus"]],["bool"]]],[11,"partial_cmp","","",1,[[["oakstatus"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",0,[[["self"],["channelreadstatus"]],[["ordering"],["option",["ordering"]]]]],[11,"cmp","","",1,[[["oakstatus"],["self"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["channelreadstatus"]],["ordering"]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"default","","",1,[[],["oakstatus"]]],[11,"default","","",0,[[],["channelreadstatus"]]],[11,"clone","","",0,[[["self"]],["channelreadstatus"]]],[11,"clone","","",1,[[["self"]],["oakstatus"]]],[11,"decode","oak::grpc","",5,[[["message"]],[["result",["oakerror"]],["oakerror"]]]],[11,"encode","","",5,[[["self"]],[["message"],["result",["message","oakerror"]],["oakerror"]]]],[11,"from","oak","",4,[[["protobuferror"]],["self"]]],[11,"from","","",4,[[["error"]],["self"]]],[11,"from","","",4,[[["oakstatus"]],["self"]]],[11,"clone","oak::grpc","",6,[[["self"]],["writemode"]]],[11,"clone","oak::io","",10,[[["self"]],["receiver"]]],[11,"clone","","",11,[[["self"]],["sender"]]],[11,"clone","oak::proto::code","",15,[[["self"]],["code"]]],[11,"clone","oak::proto::grpc_encap","",16,[[["self"]],["grpcrequest"]]],[11,"clone","","",17,[[["self"]],["grpcresponse"]]],[11,"clone","oak::proto::policy","",18,[[["self"]],["label"]]],[11,"clone","","",19,[[["self"]],["tag"]]],[11,"clone","","",23,[[["self"]],["tag_oneof_tag"]]],[11,"clone","","",20,[[["self"]],["grpctag"]]],[11,"clone","","",21,[[["self"]],["webassemblymoduletag"]]],[11,"clone","","",22,[[["self"]],["tlsendpointtag"]]],[11,"clone","oak::proto::status","",24,[[["self"]],["status"]]],[11,"clone","oak::proto::storage","",25,[[["self"]],["storagereadrequest"]]],[11,"clone","","",26,[[["self"]],["storagereadresponse"]]],[11,"clone","","",27,[[["self"]],["storagewriterequest"]]],[11,"clone","","",28,[[["self"]],["storagewriteresponse"]]],[11,"clone","","",29,[[["self"]],["storagedeleterequest"]]],[11,"clone","","",30,[[["self"]],["storagedeleteresponse"]]],[11,"clone","","",31,[[["self"]],["storagebeginrequest"]]],[11,"clone","","",32,[[["self"]],["storagebeginresponse"]]],[11,"clone","","",33,[[["self"]],["storagecommitrequest"]]],[11,"clone","","",34,[[["self"]],["storagecommitresponse"]]],[11,"clone","","",35,[[["self"]],["storagerollbackrequest"]]],[11,"clone","","",36,[[["self"]],["storagerollbackresponse"]]],[11,"clone","oak::proto::storage_channel","",37,[[["self"]],["storageitem"]]],[11,"clone","","",38,[[["self"]],["storagechannelreadrequest"]]],[11,"clone","","",39,[[["self"]],["storagechannelreadresponse"]]],[11,"clone","","",40,[[["self"]],["storagechannelwriterequest"]]],[11,"clone","","",41,[[["self"]],["storagechannelwriteresponse"]]],[11,"clone","","",42,[[["self"]],["storagechanneldeleterequest"]]],[11,"clone","","",43,[[["self"]],["storagechanneldeleteresponse"]]],[11,"clone","","",44,[[["self"]],["storagechannelbeginrequest"]]],[11,"clone","","",45,[[["self"]],["storagechannelbeginresponse"]]],[11,"clone","","",46,[[["self"]],["storagechannelcommitrequest"]]],[11,"clone","","",47,[[["self"]],["storagechannelcommitresponse"]]],[11,"clone","","",48,[[["self"]],["storagechannelrollbackrequest"]]],[11,"clone","","",49,[[["self"]],["storagechannelrollbackresponse"]]],[11,"clone","oak::proto::log","",50,[[["self"]],["logmessage"]]],[11,"clone","","",51,[[["self"]],["level"]]],[11,"clone","oak::rand","",55,[[["self"]],["oakrng"]]],[11,"clone","oak","",54,[[["self"]],["handle"]]],[11,"clone","","",2,[[["self"]],["readhandle"]]],[11,"clone","","",3,[[["self"]],["writehandle"]]],[11,"default","oak::proto::code","",15,[[],["self"]]],[11,"default","oak::proto::grpc_encap","",16,[[],["grpcrequest"]]],[11,"default","","",17,[[],["grpcresponse"]]],[11,"default","oak::proto::policy","",18,[[],["label"]]],[11,"default","","",19,[[],["tag"]]],[11,"default","","",20,[[],["grpctag"]]],[11,"default","","",21,[[],["webassemblymoduletag"]]],[11,"default","","",22,[[],["tlsendpointtag"]]],[11,"default","oak::proto::status","",24,[[],["status"]]],[11,"default","oak::proto::storage","",25,[[],["storagereadrequest"]]],[11,"default","","",26,[[],["storagereadresponse"]]],[11,"default","","",27,[[],["storagewriterequest"]]],[11,"default","","",28,[[],["storagewriteresponse"]]],[11,"default","","",29,[[],["storagedeleterequest"]]],[11,"default","","",30,[[],["storagedeleteresponse"]]],[11,"default","","",31,[[],["storagebeginrequest"]]],[11,"default","","",32,[[],["storagebeginresponse"]]],[11,"default","","",33,[[],["storagecommitrequest"]]],[11,"default","","",34,[[],["storagecommitresponse"]]],[11,"default","","",35,[[],["storagerollbackrequest"]]],[11,"default","","",36,[[],["storagerollbackresponse"]]],[11,"default","oak::proto::storage_channel","",37,[[],["storageitem"]]],[11,"default","","",38,[[],["storagechannelreadrequest"]]],[11,"default","","",39,[[],["storagechannelreadresponse"]]],[11,"default","","",40,[[],["storagechannelwriterequest"]]],[11,"default","","",41,[[],["storagechannelwriteresponse"]]],[11,"default","","",42,[[],["storagechanneldeleterequest"]]],[11,"default","","",43,[[],["storagechanneldeleteresponse"]]],[11,"default","","",44,[[],["storagechannelbeginrequest"]]],[11,"default","","",45,[[],["storagechannelbeginresponse"]]],[11,"default","","",46,[[],["storagechannelcommitrequest"]]],[11,"default","","",47,[[],["storagechannelcommitresponse"]]],[11,"default","","",48,[[],["storagechannelrollbackrequest"]]],[11,"default","","",49,[[],["storagechannelrollbackresponse"]]],[11,"default","oak::proto::log","",50,[[],["logmessage"]]],[11,"default","","",51,[[],["self"]]],[11,"eq","oak::grpc","",6,[[["writemode"],["self"]],["bool"]]],[11,"eq","oak::io","",10,[[["receiver"],["self"]],["bool"]]],[11,"ne","","",10,[[["receiver"],["self"]],["bool"]]],[11,"eq","","",11,[[["sender"],["self"]],["bool"]]],[11,"ne","","",11,[[["sender"],["self"]],["bool"]]],[11,"eq","","",12,[[["message"],["self"]],["bool"]]],[11,"ne","","",12,[[["message"],["self"]],["bool"]]],[11,"eq","oak::proto::code","",15,[[["code"],["self"]],["bool"]]],[11,"eq","oak::proto::grpc_encap","",16,[[["self"],["grpcrequest"]],["bool"]]],[11,"ne","","",16,[[["self"],["grpcrequest"]],["bool"]]],[11,"eq","","",17,[[["grpcresponse"],["self"]],["bool"]]],[11,"ne","","",17,[[["grpcresponse"],["self"]],["bool"]]],[11,"eq","oak::proto::policy","",18,[[["self"],["label"]],["bool"]]],[11,"ne","","",18,[[["self"],["label"]],["bool"]]],[11,"eq","","",19,[[["tag"],["self"]],["bool"]]],[11,"ne","","",19,[[["tag"],["self"]],["bool"]]],[11,"eq","","",23,[[["tag_oneof_tag"],["self"]],["bool"]]],[11,"ne","","",23,[[["tag_oneof_tag"],["self"]],["bool"]]],[11,"eq","","",20,[[["grpctag"],["self"]],["bool"]]],[11,"ne","","",20,[[["grpctag"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["webassemblymoduletag"]],["bool"]]],[11,"ne","","",21,[[["self"],["webassemblymoduletag"]],["bool"]]],[11,"eq","","",22,[[["self"],["tlsendpointtag"]],["bool"]]],[11,"ne","","",22,[[["self"],["tlsendpointtag"]],["bool"]]],[11,"eq","oak::proto::status","",24,[[["self"],["status"]],["bool"]]],[11,"ne","","",24,[[["self"],["status"]],["bool"]]],[11,"eq","oak::proto::storage","",25,[[["self"],["storagereadrequest"]],["bool"]]],[11,"ne","","",25,[[["self"],["storagereadrequest"]],["bool"]]],[11,"eq","","",26,[[["self"],["storagereadresponse"]],["bool"]]],[11,"ne","","",26,[[["self"],["storagereadresponse"]],["bool"]]],[11,"eq","","",27,[[["storagewriterequest"],["self"]],["bool"]]],[11,"ne","","",27,[[["storagewriterequest"],["self"]],["bool"]]],[11,"eq","","",28,[[["storagewriteresponse"],["self"]],["bool"]]],[11,"ne","","",28,[[["storagewriteresponse"],["self"]],["bool"]]],[11,"eq","","",29,[[["storagedeleterequest"],["self"]],["bool"]]],[11,"ne","","",29,[[["storagedeleterequest"],["self"]],["bool"]]],[11,"eq","","",30,[[["self"],["storagedeleteresponse"]],["bool"]]],[11,"ne","","",30,[[["self"],["storagedeleteresponse"]],["bool"]]],[11,"eq","","",31,[[["storagebeginrequest"],["self"]],["bool"]]],[11,"ne","","",31,[[["storagebeginrequest"],["self"]],["bool"]]],[11,"eq","","",32,[[["self"],["storagebeginresponse"]],["bool"]]],[11,"ne","","",32,[[["self"],["storagebeginresponse"]],["bool"]]],[11,"eq","","",33,[[["storagecommitrequest"],["self"]],["bool"]]],[11,"ne","","",33,[[["storagecommitrequest"],["self"]],["bool"]]],[11,"eq","","",34,[[["storagecommitresponse"],["self"]],["bool"]]],[11,"ne","","",34,[[["storagecommitresponse"],["self"]],["bool"]]],[11,"eq","","",35,[[["self"],["storagerollbackrequest"]],["bool"]]],[11,"ne","","",35,[[["self"],["storagerollbackrequest"]],["bool"]]],[11,"eq","","",36,[[["self"],["storagerollbackresponse"]],["bool"]]],[11,"ne","","",36,[[["self"],["storagerollbackresponse"]],["bool"]]],[11,"eq","oak::proto::storage_channel","",37,[[["self"],["storageitem"]],["bool"]]],[11,"ne","","",37,[[["self"],["storageitem"]],["bool"]]],[11,"eq","","",38,[[["storagechannelreadrequest"],["self"]],["bool"]]],[11,"ne","","",38,[[["storagechannelreadrequest"],["self"]],["bool"]]],[11,"eq","","",39,[[["self"],["storagechannelreadresponse"]],["bool"]]],[11,"ne","","",39,[[["self"],["storagechannelreadresponse"]],["bool"]]],[11,"eq","","",40,[[["self"],["storagechannelwriterequest"]],["bool"]]],[11,"ne","","",40,[[["self"],["storagechannelwriterequest"]],["bool"]]],[11,"eq","","",41,[[["storagechannelwriteresponse"],["self"]],["bool"]]],[11,"ne","","",41,[[["storagechannelwriteresponse"],["self"]],["bool"]]],[11,"eq","","",42,[[["self"],["storagechanneldeleterequest"]],["bool"]]],[11,"ne","","",42,[[["self"],["storagechanneldeleterequest"]],["bool"]]],[11,"eq","","",43,[[["self"],["storagechanneldeleteresponse"]],["bool"]]],[11,"ne","","",43,[[["self"],["storagechanneldeleteresponse"]],["bool"]]],[11,"eq","","",44,[[["storagechannelbeginrequest"],["self"]],["bool"]]],[11,"ne","","",44,[[["storagechannelbeginrequest"],["self"]],["bool"]]],[11,"eq","","",45,[[["self"],["storagechannelbeginresponse"]],["bool"]]],[11,"ne","","",45,[[["self"],["storagechannelbeginresponse"]],["bool"]]],[11,"eq","","",46,[[["storagechannelcommitrequest"],["self"]],["bool"]]],[11,"ne","","",46,[[["storagechannelcommitrequest"],["self"]],["bool"]]],[11,"eq","","",47,[[["storagechannelcommitresponse"],["self"]],["bool"]]],[11,"ne","","",47,[[["storagechannelcommitresponse"],["self"]],["bool"]]],[11,"eq","","",48,[[["self"],["storagechannelrollbackrequest"]],["bool"]]],[11,"ne","","",48,[[["self"],["storagechannelrollbackrequest"]],["bool"]]],[11,"eq","","",49,[[["storagechannelrollbackresponse"],["self"]],["bool"]]],[11,"ne","","",49,[[["storagechannelrollbackresponse"],["self"]],["bool"]]],[11,"eq","oak::proto::log","",50,[[["self"],["logmessage"]],["bool"]]],[11,"ne","","",50,[[["self"],["logmessage"]],["bool"]]],[11,"eq","","",51,[[["level"],["self"]],["bool"]]],[11,"eq","oak","",54,[[["handle"],["self"]],["bool"]]],[11,"ne","","",54,[[["handle"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["readhandle"]],["bool"]]],[11,"ne","","",2,[[["self"],["readhandle"]],["bool"]]],[11,"eq","","",3,[[["self"],["writehandle"]],["bool"]]],[11,"ne","","",3,[[["self"],["writehandle"]],["bool"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","oak::grpc","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","oak::io","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","oak::proto::code","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","oak::proto::grpc_encap","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","oak::proto::policy","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","oak::proto::status","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","oak::proto::storage","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","oak::proto::storage_channel","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","oak::proto::log","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","oak::rand","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","oak","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"hash","oak::proto::code","",15,[[["self"],["__h"]]]],[11,"hash","oak::proto::log","",51,[[["self"],["__h"]]]],[11,"hash","oak","",54,[[["self"],["__h"]]]],[11,"serialize","oak::io","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","oak","",54,[[["s"],["self"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"deserialize","oak::io","",10,[[["__d"]],["result"]]],[11,"deserialize","","",11,[[["__d"]],["result"]]],[11,"deserialize","oak","",54,[[["d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"is_initialized","oak::proto::grpc_encap","",16,[[["self"]],["bool"]]],[11,"merge_from","","",16,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",16,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",16,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",16,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",16,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",16,[[["self"]],["unknownfields"]]],[11,"as_any","","",16,[[["self"]],["any"]]],[11,"as_any_mut","","",16,[[["self"]],["any"]]],[11,"into_any","","",16,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",16,[[["self"]],["messagedescriptor"]]],[11,"new","","",16,[[],["grpcrequest"]]],[11,"descriptor_static","","",16,[[],["messagedescriptor"]]],[11,"default_instance","","",16,[[],["grpcrequest"]]],[11,"is_initialized","","",17,[[["self"]],["bool"]]],[11,"merge_from","","",17,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",17,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",17,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",17,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",17,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",17,[[["self"]],["unknownfields"]]],[11,"as_any","","",17,[[["self"]],["any"]]],[11,"as_any_mut","","",17,[[["self"]],["any"]]],[11,"into_any","","",17,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",17,[[["self"]],["messagedescriptor"]]],[11,"new","","",17,[[],["grpcresponse"]]],[11,"descriptor_static","","",17,[[],["messagedescriptor"]]],[11,"default_instance","","",17,[[],["grpcresponse"]]],[11,"is_initialized","oak::proto::policy","",18,[[["self"]],["bool"]]],[11,"merge_from","","",18,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",18,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",18,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",18,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",18,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",18,[[["self"]],["unknownfields"]]],[11,"as_any","","",18,[[["self"]],["any"]]],[11,"as_any_mut","","",18,[[["self"]],["any"]]],[11,"into_any","","",18,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",18,[[["self"]],["messagedescriptor"]]],[11,"new","","",18,[[],["label"]]],[11,"descriptor_static","","",18,[[],["messagedescriptor"]]],[11,"default_instance","","",18,[[],["label"]]],[11,"is_initialized","","",19,[[["self"]],["bool"]]],[11,"merge_from","","",19,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",19,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",19,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",19,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",19,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",19,[[["self"]],["unknownfields"]]],[11,"as_any","","",19,[[["self"]],["any"]]],[11,"as_any_mut","","",19,[[["self"]],["any"]]],[11,"into_any","","",19,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",19,[[["self"]],["messagedescriptor"]]],[11,"new","","",19,[[],["tag"]]],[11,"descriptor_static","","",19,[[],["messagedescriptor"]]],[11,"default_instance","","",19,[[],["tag"]]],[11,"is_initialized","","",20,[[["self"]],["bool"]]],[11,"merge_from","","",20,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",20,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",20,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",20,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",20,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",20,[[["self"]],["unknownfields"]]],[11,"as_any","","",20,[[["self"]],["any"]]],[11,"as_any_mut","","",20,[[["self"]],["any"]]],[11,"into_any","","",20,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",20,[[["self"]],["messagedescriptor"]]],[11,"new","","",20,[[],["grpctag"]]],[11,"descriptor_static","","",20,[[],["messagedescriptor"]]],[11,"default_instance","","",20,[[],["grpctag"]]],[11,"is_initialized","","",21,[[["self"]],["bool"]]],[11,"merge_from","","",21,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",21,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",21,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",21,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",21,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",21,[[["self"]],["unknownfields"]]],[11,"as_any","","",21,[[["self"]],["any"]]],[11,"as_any_mut","","",21,[[["self"]],["any"]]],[11,"into_any","","",21,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",21,[[["self"]],["messagedescriptor"]]],[11,"new","","",21,[[],["webassemblymoduletag"]]],[11,"descriptor_static","","",21,[[],["messagedescriptor"]]],[11,"default_instance","","",21,[[],["webassemblymoduletag"]]],[11,"is_initialized","","",22,[[["self"]],["bool"]]],[11,"merge_from","","",22,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",22,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",22,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",22,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",22,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",22,[[["self"]],["unknownfields"]]],[11,"as_any","","",22,[[["self"]],["any"]]],[11,"as_any_mut","","",22,[[["self"]],["any"]]],[11,"into_any","","",22,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",22,[[["self"]],["messagedescriptor"]]],[11,"new","","",22,[[],["tlsendpointtag"]]],[11,"descriptor_static","","",22,[[],["messagedescriptor"]]],[11,"default_instance","","",22,[[],["tlsendpointtag"]]],[11,"is_initialized","oak::proto::status","",24,[[["self"]],["bool"]]],[11,"merge_from","","",24,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",24,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",24,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",24,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",24,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",24,[[["self"]],["unknownfields"]]],[11,"as_any","","",24,[[["self"]],["any"]]],[11,"as_any_mut","","",24,[[["self"]],["any"]]],[11,"into_any","","",24,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",24,[[["self"]],["messagedescriptor"]]],[11,"new","","",24,[[],["status"]]],[11,"descriptor_static","","",24,[[],["messagedescriptor"]]],[11,"default_instance","","",24,[[],["status"]]],[11,"is_initialized","oak::proto::storage","",25,[[["self"]],["bool"]]],[11,"merge_from","","",25,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",25,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",25,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",25,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",25,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",25,[[["self"]],["unknownfields"]]],[11,"as_any","","",25,[[["self"]],["any"]]],[11,"as_any_mut","","",25,[[["self"]],["any"]]],[11,"into_any","","",25,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",25,[[["self"]],["messagedescriptor"]]],[11,"new","","",25,[[],["storagereadrequest"]]],[11,"descriptor_static","","",25,[[],["messagedescriptor"]]],[11,"default_instance","","",25,[[],["storagereadrequest"]]],[11,"is_initialized","","",26,[[["self"]],["bool"]]],[11,"merge_from","","",26,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",26,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",26,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",26,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",26,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",26,[[["self"]],["unknownfields"]]],[11,"as_any","","",26,[[["self"]],["any"]]],[11,"as_any_mut","","",26,[[["self"]],["any"]]],[11,"into_any","","",26,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",26,[[["self"]],["messagedescriptor"]]],[11,"new","","",26,[[],["storagereadresponse"]]],[11,"descriptor_static","","",26,[[],["messagedescriptor"]]],[11,"default_instance","","",26,[[],["storagereadresponse"]]],[11,"is_initialized","","",27,[[["self"]],["bool"]]],[11,"merge_from","","",27,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",27,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",27,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",27,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",27,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",27,[[["self"]],["unknownfields"]]],[11,"as_any","","",27,[[["self"]],["any"]]],[11,"as_any_mut","","",27,[[["self"]],["any"]]],[11,"into_any","","",27,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",27,[[["self"]],["messagedescriptor"]]],[11,"new","","",27,[[],["storagewriterequest"]]],[11,"descriptor_static","","",27,[[],["messagedescriptor"]]],[11,"default_instance","","",27,[[],["storagewriterequest"]]],[11,"is_initialized","","",28,[[["self"]],["bool"]]],[11,"merge_from","","",28,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",28,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",28,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",28,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",28,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",28,[[["self"]],["unknownfields"]]],[11,"as_any","","",28,[[["self"]],["any"]]],[11,"as_any_mut","","",28,[[["self"]],["any"]]],[11,"into_any","","",28,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",28,[[["self"]],["messagedescriptor"]]],[11,"new","","",28,[[],["storagewriteresponse"]]],[11,"descriptor_static","","",28,[[],["messagedescriptor"]]],[11,"default_instance","","",28,[[],["storagewriteresponse"]]],[11,"is_initialized","","",29,[[["self"]],["bool"]]],[11,"merge_from","","",29,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",29,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",29,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",29,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",29,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",29,[[["self"]],["unknownfields"]]],[11,"as_any","","",29,[[["self"]],["any"]]],[11,"as_any_mut","","",29,[[["self"]],["any"]]],[11,"into_any","","",29,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",29,[[["self"]],["messagedescriptor"]]],[11,"new","","",29,[[],["storagedeleterequest"]]],[11,"descriptor_static","","",29,[[],["messagedescriptor"]]],[11,"default_instance","","",29,[[],["storagedeleterequest"]]],[11,"is_initialized","","",30,[[["self"]],["bool"]]],[11,"merge_from","","",30,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",30,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",30,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",30,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",30,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",30,[[["self"]],["unknownfields"]]],[11,"as_any","","",30,[[["self"]],["any"]]],[11,"as_any_mut","","",30,[[["self"]],["any"]]],[11,"into_any","","",30,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",30,[[["self"]],["messagedescriptor"]]],[11,"new","","",30,[[],["storagedeleteresponse"]]],[11,"descriptor_static","","",30,[[],["messagedescriptor"]]],[11,"default_instance","","",30,[[],["storagedeleteresponse"]]],[11,"is_initialized","","",31,[[["self"]],["bool"]]],[11,"merge_from","","",31,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",31,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",31,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",31,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",31,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",31,[[["self"]],["unknownfields"]]],[11,"as_any","","",31,[[["self"]],["any"]]],[11,"as_any_mut","","",31,[[["self"]],["any"]]],[11,"into_any","","",31,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",31,[[["self"]],["messagedescriptor"]]],[11,"new","","",31,[[],["storagebeginrequest"]]],[11,"descriptor_static","","",31,[[],["messagedescriptor"]]],[11,"default_instance","","",31,[[],["storagebeginrequest"]]],[11,"is_initialized","","",32,[[["self"]],["bool"]]],[11,"merge_from","","",32,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",32,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",32,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",32,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",32,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",32,[[["self"]],["unknownfields"]]],[11,"as_any","","",32,[[["self"]],["any"]]],[11,"as_any_mut","","",32,[[["self"]],["any"]]],[11,"into_any","","",32,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",32,[[["self"]],["messagedescriptor"]]],[11,"new","","",32,[[],["storagebeginresponse"]]],[11,"descriptor_static","","",32,[[],["messagedescriptor"]]],[11,"default_instance","","",32,[[],["storagebeginresponse"]]],[11,"is_initialized","","",33,[[["self"]],["bool"]]],[11,"merge_from","","",33,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",33,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",33,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",33,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",33,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",33,[[["self"]],["unknownfields"]]],[11,"as_any","","",33,[[["self"]],["any"]]],[11,"as_any_mut","","",33,[[["self"]],["any"]]],[11,"into_any","","",33,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",33,[[["self"]],["messagedescriptor"]]],[11,"new","","",33,[[],["storagecommitrequest"]]],[11,"descriptor_static","","",33,[[],["messagedescriptor"]]],[11,"default_instance","","",33,[[],["storagecommitrequest"]]],[11,"is_initialized","","",34,[[["self"]],["bool"]]],[11,"merge_from","","",34,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",34,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",34,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",34,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",34,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",34,[[["self"]],["unknownfields"]]],[11,"as_any","","",34,[[["self"]],["any"]]],[11,"as_any_mut","","",34,[[["self"]],["any"]]],[11,"into_any","","",34,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",34,[[["self"]],["messagedescriptor"]]],[11,"new","","",34,[[],["storagecommitresponse"]]],[11,"descriptor_static","","",34,[[],["messagedescriptor"]]],[11,"default_instance","","",34,[[],["storagecommitresponse"]]],[11,"is_initialized","","",35,[[["self"]],["bool"]]],[11,"merge_from","","",35,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",35,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",35,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",35,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",35,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",35,[[["self"]],["unknownfields"]]],[11,"as_any","","",35,[[["self"]],["any"]]],[11,"as_any_mut","","",35,[[["self"]],["any"]]],[11,"into_any","","",35,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",35,[[["self"]],["messagedescriptor"]]],[11,"new","","",35,[[],["storagerollbackrequest"]]],[11,"descriptor_static","","",35,[[],["messagedescriptor"]]],[11,"default_instance","","",35,[[],["storagerollbackrequest"]]],[11,"is_initialized","","",36,[[["self"]],["bool"]]],[11,"merge_from","","",36,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",36,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",36,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",36,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",36,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",36,[[["self"]],["unknownfields"]]],[11,"as_any","","",36,[[["self"]],["any"]]],[11,"as_any_mut","","",36,[[["self"]],["any"]]],[11,"into_any","","",36,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",36,[[["self"]],["messagedescriptor"]]],[11,"new","","",36,[[],["storagerollbackresponse"]]],[11,"descriptor_static","","",36,[[],["messagedescriptor"]]],[11,"default_instance","","",36,[[],["storagerollbackresponse"]]],[11,"is_initialized","oak::proto::storage_channel","",37,[[["self"]],["bool"]]],[11,"merge_from","","",37,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",37,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",37,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",37,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",37,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",37,[[["self"]],["unknownfields"]]],[11,"as_any","","",37,[[["self"]],["any"]]],[11,"as_any_mut","","",37,[[["self"]],["any"]]],[11,"into_any","","",37,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",37,[[["self"]],["messagedescriptor"]]],[11,"new","","",37,[[],["storageitem"]]],[11,"descriptor_static","","",37,[[],["messagedescriptor"]]],[11,"default_instance","","",37,[[],["storageitem"]]],[11,"is_initialized","","",38,[[["self"]],["bool"]]],[11,"merge_from","","",38,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",38,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",38,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",38,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",38,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",38,[[["self"]],["unknownfields"]]],[11,"as_any","","",38,[[["self"]],["any"]]],[11,"as_any_mut","","",38,[[["self"]],["any"]]],[11,"into_any","","",38,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",38,[[["self"]],["messagedescriptor"]]],[11,"new","","",38,[[],["storagechannelreadrequest"]]],[11,"descriptor_static","","",38,[[],["messagedescriptor"]]],[11,"default_instance","","",38,[[],["storagechannelreadrequest"]]],[11,"is_initialized","","",39,[[["self"]],["bool"]]],[11,"merge_from","","",39,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",39,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",39,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",39,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",39,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",39,[[["self"]],["unknownfields"]]],[11,"as_any","","",39,[[["self"]],["any"]]],[11,"as_any_mut","","",39,[[["self"]],["any"]]],[11,"into_any","","",39,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",39,[[["self"]],["messagedescriptor"]]],[11,"new","","",39,[[],["storagechannelreadresponse"]]],[11,"descriptor_static","","",39,[[],["messagedescriptor"]]],[11,"default_instance","","",39,[[],["storagechannelreadresponse"]]],[11,"is_initialized","","",40,[[["self"]],["bool"]]],[11,"merge_from","","",40,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",40,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",40,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",40,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",40,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",40,[[["self"]],["unknownfields"]]],[11,"as_any","","",40,[[["self"]],["any"]]],[11,"as_any_mut","","",40,[[["self"]],["any"]]],[11,"into_any","","",40,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",40,[[["self"]],["messagedescriptor"]]],[11,"new","","",40,[[],["storagechannelwriterequest"]]],[11,"descriptor_static","","",40,[[],["messagedescriptor"]]],[11,"default_instance","","",40,[[],["storagechannelwriterequest"]]],[11,"is_initialized","","",41,[[["self"]],["bool"]]],[11,"merge_from","","",41,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",41,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",41,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",41,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",41,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",41,[[["self"]],["unknownfields"]]],[11,"as_any","","",41,[[["self"]],["any"]]],[11,"as_any_mut","","",41,[[["self"]],["any"]]],[11,"into_any","","",41,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",41,[[["self"]],["messagedescriptor"]]],[11,"new","","",41,[[],["storagechannelwriteresponse"]]],[11,"descriptor_static","","",41,[[],["messagedescriptor"]]],[11,"default_instance","","",41,[[],["storagechannelwriteresponse"]]],[11,"is_initialized","","",42,[[["self"]],["bool"]]],[11,"merge_from","","",42,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",42,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",42,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",42,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",42,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",42,[[["self"]],["unknownfields"]]],[11,"as_any","","",42,[[["self"]],["any"]]],[11,"as_any_mut","","",42,[[["self"]],["any"]]],[11,"into_any","","",42,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",42,[[["self"]],["messagedescriptor"]]],[11,"new","","",42,[[],["storagechanneldeleterequest"]]],[11,"descriptor_static","","",42,[[],["messagedescriptor"]]],[11,"default_instance","","",42,[[],["storagechanneldeleterequest"]]],[11,"is_initialized","","",43,[[["self"]],["bool"]]],[11,"merge_from","","",43,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",43,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",43,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",43,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",43,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",43,[[["self"]],["unknownfields"]]],[11,"as_any","","",43,[[["self"]],["any"]]],[11,"as_any_mut","","",43,[[["self"]],["any"]]],[11,"into_any","","",43,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",43,[[["self"]],["messagedescriptor"]]],[11,"new","","",43,[[],["storagechanneldeleteresponse"]]],[11,"descriptor_static","","",43,[[],["messagedescriptor"]]],[11,"default_instance","","",43,[[],["storagechanneldeleteresponse"]]],[11,"is_initialized","","",44,[[["self"]],["bool"]]],[11,"merge_from","","",44,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",44,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",44,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",44,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",44,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",44,[[["self"]],["unknownfields"]]],[11,"as_any","","",44,[[["self"]],["any"]]],[11,"as_any_mut","","",44,[[["self"]],["any"]]],[11,"into_any","","",44,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",44,[[["self"]],["messagedescriptor"]]],[11,"new","","",44,[[],["storagechannelbeginrequest"]]],[11,"descriptor_static","","",44,[[],["messagedescriptor"]]],[11,"default_instance","","",44,[[],["storagechannelbeginrequest"]]],[11,"is_initialized","","",45,[[["self"]],["bool"]]],[11,"merge_from","","",45,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",45,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",45,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",45,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",45,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",45,[[["self"]],["unknownfields"]]],[11,"as_any","","",45,[[["self"]],["any"]]],[11,"as_any_mut","","",45,[[["self"]],["any"]]],[11,"into_any","","",45,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",45,[[["self"]],["messagedescriptor"]]],[11,"new","","",45,[[],["storagechannelbeginresponse"]]],[11,"descriptor_static","","",45,[[],["messagedescriptor"]]],[11,"default_instance","","",45,[[],["storagechannelbeginresponse"]]],[11,"is_initialized","","",46,[[["self"]],["bool"]]],[11,"merge_from","","",46,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",46,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",46,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",46,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",46,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",46,[[["self"]],["unknownfields"]]],[11,"as_any","","",46,[[["self"]],["any"]]],[11,"as_any_mut","","",46,[[["self"]],["any"]]],[11,"into_any","","",46,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",46,[[["self"]],["messagedescriptor"]]],[11,"new","","",46,[[],["storagechannelcommitrequest"]]],[11,"descriptor_static","","",46,[[],["messagedescriptor"]]],[11,"default_instance","","",46,[[],["storagechannelcommitrequest"]]],[11,"is_initialized","","",47,[[["self"]],["bool"]]],[11,"merge_from","","",47,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",47,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",47,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",47,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",47,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",47,[[["self"]],["unknownfields"]]],[11,"as_any","","",47,[[["self"]],["any"]]],[11,"as_any_mut","","",47,[[["self"]],["any"]]],[11,"into_any","","",47,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",47,[[["self"]],["messagedescriptor"]]],[11,"new","","",47,[[],["storagechannelcommitresponse"]]],[11,"descriptor_static","","",47,[[],["messagedescriptor"]]],[11,"default_instance","","",47,[[],["storagechannelcommitresponse"]]],[11,"is_initialized","","",48,[[["self"]],["bool"]]],[11,"merge_from","","",48,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",48,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",48,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",48,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",48,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",48,[[["self"]],["unknownfields"]]],[11,"as_any","","",48,[[["self"]],["any"]]],[11,"as_any_mut","","",48,[[["self"]],["any"]]],[11,"into_any","","",48,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",48,[[["self"]],["messagedescriptor"]]],[11,"new","","",48,[[],["storagechannelrollbackrequest"]]],[11,"descriptor_static","","",48,[[],["messagedescriptor"]]],[11,"default_instance","","",48,[[],["storagechannelrollbackrequest"]]],[11,"is_initialized","","",49,[[["self"]],["bool"]]],[11,"merge_from","","",49,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",49,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",49,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",49,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",49,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",49,[[["self"]],["unknownfields"]]],[11,"as_any","","",49,[[["self"]],["any"]]],[11,"as_any_mut","","",49,[[["self"]],["any"]]],[11,"into_any","","",49,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",49,[[["self"]],["messagedescriptor"]]],[11,"new","","",49,[[],["storagechannelrollbackresponse"]]],[11,"descriptor_static","","",49,[[],["messagedescriptor"]]],[11,"default_instance","","",49,[[],["storagechannelrollbackresponse"]]],[11,"is_initialized","oak::proto::log","",50,[[["self"]],["bool"]]],[11,"merge_from","","",50,[[["codedinputstream"],["self"]],["protobufresult"]]],[11,"compute_size","","",50,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",50,[[["codedoutputstream"],["self"]],["protobufresult"]]],[11,"get_cached_size","","",50,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",50,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",50,[[["self"]],["unknownfields"]]],[11,"as_any","","",50,[[["self"]],["any"]]],[11,"as_any_mut","","",50,[[["self"]],["any"]]],[11,"into_any","","",50,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",50,[[["self"]],["messagedescriptor"]]],[11,"new","","",50,[[],["logmessage"]]],[11,"descriptor_static","","",50,[[],["messagedescriptor"]]],[11,"default_instance","","",50,[[],["logmessage"]]],[11,"value","oak::proto::code","",15,[[["self"]],["i32"]]],[11,"from_i32","","",15,[[["i32"]],[["code"],["option",["code"]]]]],[11,"values","","",15,[[]]],[11,"enum_descriptor_static","","",15,[[],["enumdescriptor"]]],[11,"value","oak::proto::log","",51,[[["self"]],["i32"]]],[11,"from_i32","","",51,[[["i32"]],[["level"],["option",["level"]]]]],[11,"values","","",51,[[]]],[11,"enum_descriptor_static","","",51,[[],["enumdescriptor"]]],[11,"clear","oak::proto::grpc_encap","",16,[[["self"]]]],[11,"clear","","",17,[[["self"]]]],[11,"clear","oak::proto::policy","",18,[[["self"]]]],[11,"clear","","",19,[[["self"]]]],[11,"clear","","",20,[[["self"]]]],[11,"clear","","",21,[[["self"]]]],[11,"clear","","",22,[[["self"]]]],[11,"clear","oak::proto::status","",24,[[["self"]]]],[11,"clear","oak::proto::storage","",25,[[["self"]]]],[11,"clear","","",26,[[["self"]]]],[11,"clear","","",27,[[["self"]]]],[11,"clear","","",28,[[["self"]]]],[11,"clear","","",29,[[["self"]]]],[11,"clear","","",30,[[["self"]]]],[11,"clear","","",31,[[["self"]]]],[11,"clear","","",32,[[["self"]]]],[11,"clear","","",33,[[["self"]]]],[11,"clear","","",34,[[["self"]]]],[11,"clear","","",35,[[["self"]]]],[11,"clear","","",36,[[["self"]]]],[11,"clear","oak::proto::storage_channel","",37,[[["self"]]]],[11,"clear","","",38,[[["self"]]]],[11,"clear","","",39,[[["self"]]]],[11,"clear","","",40,[[["self"]]]],[11,"clear","","",41,[[["self"]]]],[11,"clear","","",42,[[["self"]]]],[11,"clear","","",43,[[["self"]]]],[11,"clear","","",44,[[["self"]]]],[11,"clear","","",45,[[["self"]]]],[11,"clear","","",46,[[["self"]]]],[11,"clear","","",47,[[["self"]]]],[11,"clear","","",48,[[["self"]]]],[11,"clear","","",49,[[["self"]]]],[11,"clear","oak::proto::log","",50,[[["self"]]]],[11,"as_ref","oak::proto::code","",15,[[["self"]],["protobufvalueref"]]],[11,"as_ref","oak::proto::grpc_encap","",16,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",17,[[["self"]],["protobufvalueref"]]],[11,"as_ref","oak::proto::policy","",18,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",19,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",20,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",21,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",22,[[["self"]],["protobufvalueref"]]],[11,"as_ref","oak::proto::status","",24,[[["self"]],["protobufvalueref"]]],[11,"as_ref","oak::proto::storage","",25,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",26,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",27,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",28,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",29,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",30,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",31,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",32,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",33,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",34,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",35,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",36,[[["self"]],["protobufvalueref"]]],[11,"as_ref","oak::proto::storage_channel","",37,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",38,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",39,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",40,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",41,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",42,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",43,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",44,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",45,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",46,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",47,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",48,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",49,[[["self"]],["protobufvalueref"]]],[11,"as_ref","oak::proto::log","",50,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",51,[[["self"]],["protobufvalueref"]]],[11,"next_u32","oak::rand","",55,[[["self"]],["u32"]]],[11,"next_u64","","",55,[[["self"]],["u64"]]],[11,"fill_bytes","","",55,[[["self"]]]],[11,"try_fill_bytes","","",55,[[["self"]],[["result",["error"]],["error"]]]],[11,"is_valid","oak","Returns `true` if `value` is a variant ofâ€¦",0,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `ChannelReadStatus`, or `None` ifâ€¦",0,[[["i32"]],[["channelreadstatus"],["option",["channelreadstatus"]]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `OakStatus`.",1,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `OakStatus`, or `None` if `value`â€¦",1,[[["i32"]],[["oakstatus"],["option",["oakstatus"]]]]]],"p":[[4,"ChannelReadStatus"],[4,"OakStatus"],[3,"ReadHandle"],[3,"WriteHandle"],[4,"OakError"],[3,"Invocation"],[4,"WriteMode"],[3,"Client"],[8,"ServerNode"],[3,"ChannelResponseWriter"],[3,"Receiver"],[3,"Sender"],[3,"Message"],[8,"Decodable"],[8,"Encodable"],[4,"Code"],[3,"GrpcRequest"],[3,"GrpcResponse"],[3,"Label"],[3,"Tag"],[3,"GrpcTag"],[3,"WebAssemblyModuleTag"],[3,"TlsEndpointTag"],[4,"Tag_oneof_tag"],[3,"Status"],[3,"StorageReadRequest"],[3,"StorageReadResponse"],[3,"StorageWriteRequest"],[3,"StorageWriteResponse"],[3,"StorageDeleteRequest"],[3,"StorageDeleteResponse"],[3,"StorageBeginRequest"],[3,"StorageBeginResponse"],[3,"StorageCommitRequest"],[3,"StorageCommitResponse"],[3,"StorageRollbackRequest"],[3,"StorageRollbackResponse"],[3,"StorageItem"],[3,"StorageChannelReadRequest"],[3,"StorageChannelReadResponse"],[3,"StorageChannelWriteRequest"],[3,"StorageChannelWriteResponse"],[3,"StorageChannelDeleteRequest"],[3,"StorageChannelDeleteResponse"],[3,"StorageChannelBeginRequest"],[3,"StorageChannelBeginResponse"],[3,"StorageChannelCommitRequest"],[3,"StorageChannelCommitResponse"],[3,"StorageChannelRollbackRequest"],[3,"StorageChannelRollbackResponse"],[3,"LogMessage"],[4,"Level"],[3,"Storage"],[8,"Node"],[3,"Handle"],[3,"OakRng"]]};
searchIndex["oak_abi"] = {"doc":"Type, constant and Wasm host function definitions for theâ€¦","i":[[4,"OakStatus","oak_abi","Status values exchanged as i32 values across the Node Wasmâ€¦",null,null],[13,"Unspecified","","",0,null],[13,"Ok","","Success.",0,null],[13,"ErrBadHandle","","Invalid handle provided.",0,null],[13,"ErrInvalidArgs","","Arguments invalid.",0,null],[13,"ErrChannelClosed","","Channel has been closed.",0,null],[13,"ErrBufferTooSmall","","Provided buffer was too small for operation (an outputâ€¦",0,null],[13,"ErrHandleSpaceTooSmall","","Provided handle space was too small for operation (anâ€¦",0,null],[13,"ErrOutOfRange","","Argument out of valid range.",0,null],[13,"ErrInternal","","Internal error.",0,null],[13,"ErrTerminated","","Node terminated.",0,null],[13,"ErrChannelEmpty","","Channel has no messages available to read.",0,null],[13,"ErrPermissionDenied","","The node does not have sufficient permissions to performâ€¦",0,null],[4,"ChannelReadStatus","","Single byte values used to indicate the read status of aâ€¦",null,null],[13,"NotReady","","No pending messages available on channel.",1,null],[13,"ReadReady","","Pending message available on channel.",1,null],[13,"InvalidChannel","","Channel handle does not identify the read half of aâ€¦",1,null],[13,"Orphaned","","Channel has no extant write halves (and is empty).",1,null],[5,"wait_on_channels","","Wait for channels to be ready for reading.",null,null],[5,"channel_read","","Read a message from a channel.",null,null],[5,"channel_write","","Write a message to a channel.",null,null],[5,"channel_create","","Create a new unidirectional channel.",null,null],[5,"channel_close","","Close a channel.",null,null],[5,"node_create","","Create a new Node instance running code identified byâ€¦",null,null],[5,"random_get","","Fill a buffer with random data.",null,null],[11,"is_valid","","Returns `true` if `value` is a variant of `OakStatus`.",0,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `OakStatus`, or `None` if `value`â€¦",0,[[["i32"]],[["option",["oakstatus"]],["oakstatus"]]]],[11,"is_valid","","Returns `true` if `value` is a variant ofâ€¦",1,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `ChannelReadStatus`, or `None` ifâ€¦",1,[[["i32"]],[["channelreadstatus"],["option",["channelreadstatus"]]]]],[0,"policy","","",null,null],[3,"Label","oak_abi::policy","Label represents a policy associated with a message or aâ€¦",null,null],[12,"secrecy_tags","","",2,null],[12,"integrity_tags","","",2,null],[3,"Tag","","Tag represents a category of secrecy or integrity that isâ€¦",null,null],[12,"tag","","",3,null],[3,"GrpcTag","","Policies related to gRPC communication, referring to theâ€¦",null,null],[12,"authorization_bearer_token_hmac","","In order for a client to be authorized to fulfill a tagâ€¦",4,null],[3,"WebAssemblyModuleTag","","Policies related to modules, referring to the nativeâ€¦",null,null],[12,"module_attestation","","The attestation for a single WebAssembly module, a SHA256â€¦",5,null],[3,"TlsEndpointTag","","Policies related to HTTPS communication.",null,null],[12,"certificate_subject_alternative_name","","The Subject Alternative Name (SAN) of a certificate that aâ€¦",6,null],[0,"tag","","",null,null],[4,"Tag","oak_abi::policy::tag","",null,null],[13,"GrpcTag","","",7,null],[13,"WebAssemblyModuleTag","","",7,null],[13,"TlsEndpointTag","","",7,null],[0,"label","oak_abi","Labels are defined at the ABI level because they need toâ€¦",null,null],[3,"Label","oak_abi::label","Label represents a policy associated with a message or aâ€¦",null,null],[12,"secrecy_tags","","",2,null],[12,"integrity_tags","","",2,null],[3,"Tag","","Tag represents a category of secrecy or integrity that isâ€¦",null,null],[12,"tag","","",3,null],[3,"GrpcTag","","Policies related to gRPC communication, referring to theâ€¦",null,null],[12,"authorization_bearer_token_hmac","","In order for a client to be authorized to fulfill a tagâ€¦",4,null],[3,"WebAssemblyModuleTag","","Policies related to modules, referring to the nativeâ€¦",null,null],[12,"module_attestation","","The attestation for a single WebAssembly module, a SHA256â€¦",5,null],[3,"TlsEndpointTag","","Policies related to HTTPS communication.",null,null],[12,"certificate_subject_alternative_name","","The Subject Alternative Name (SAN) of a certificate that aâ€¦",6,null],[5,"authorization_bearer_token_hmac_tag","","Creates a [`Tag`] having as principal the providedâ€¦",null,[[],["tag"]]],[0,"tag","","",null,null],[4,"Tag","oak_abi::label::tag","",null,null],[13,"GrpcTag","","",7,null],[13,"WebAssemblyModuleTag","","",7,null],[13,"TlsEndpointTag","","",7,null],[11,"serialize","oak_abi::policy","Convert the label to bytes.",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"deserialize","","Build the label from bytes.",2,[[],["option"]]],[11,"public_trusted","","",2,[[],["self"]]],[11,"flows_to","","Compare two labels according to the lattice structure: L_0â€¦",2,[[["self"]],["bool"]]],[6,"Handle","oak_abi","Handle used to identify read or write channel halves.",null,null],[6,"NodeMainC","","Expected type for a Node entrypoint that is exposed as aâ€¦",null,null],[6,"NodeMain","","Expected Rust type for a Node entrypoint.",null,null],[17,"SPACE_BYTES_PER_HANDLE","","Number of bytes needed per-handle for channel readinessâ€¦",null,null],[17,"INVALID_HANDLE","","Invalid handle value.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","oak_abi::policy","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","oak_abi::policy::tag","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"clone","oak_abi","",0,[[["self"]],["oakstatus"]]],[11,"clone","","",1,[[["self"]],["channelreadstatus"]]],[11,"clone","oak_abi::policy","",2,[[["self"]],["label"]]],[11,"clone","","",3,[[["self"]],["tag"]]],[11,"clone","oak_abi::policy::tag","",7,[[["self"]],["tag"]]],[11,"clone","oak_abi::policy","",4,[[["self"]],["grpctag"]]],[11,"clone","","",5,[[["self"]],["webassemblymoduletag"]]],[11,"clone","","",6,[[["self"]],["tlsendpointtag"]]],[11,"default","oak_abi","",0,[[],["oakstatus"]]],[11,"default","","",1,[[],["channelreadstatus"]]],[11,"default","oak_abi::policy","",2,[[],["label"]]],[11,"default","","",3,[[],["tag"]]],[11,"default","","",4,[[],["grpctag"]]],[11,"default","","",5,[[],["webassemblymoduletag"]]],[11,"default","","",6,[[],["tlsendpointtag"]]],[11,"cmp","oak_abi","",0,[[["oakstatus"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["channelreadstatus"]],["ordering"]]],[11,"eq","","",0,[[["oakstatus"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["channelreadstatus"]],["bool"]]],[11,"eq","oak_abi::policy","",2,[[["self"],["label"]],["bool"]]],[11,"ne","","",2,[[["self"],["label"]],["bool"]]],[11,"eq","","",3,[[["tag"],["self"]],["bool"]]],[11,"ne","","",3,[[["tag"],["self"]],["bool"]]],[11,"eq","oak_abi::policy::tag","",7,[[["tag"],["self"]],["bool"]]],[11,"ne","","",7,[[["tag"],["self"]],["bool"]]],[11,"eq","oak_abi::policy","",4,[[["grpctag"],["self"]],["bool"]]],[11,"ne","","",4,[[["grpctag"],["self"]],["bool"]]],[11,"eq","","",5,[[["webassemblymoduletag"],["self"]],["bool"]]],[11,"ne","","",5,[[["webassemblymoduletag"],["self"]],["bool"]]],[11,"eq","","",6,[[["self"],["tlsendpointtag"]],["bool"]]],[11,"ne","","",6,[[["self"],["tlsendpointtag"]],["bool"]]],[11,"partial_cmp","oak_abi","",0,[[["oakstatus"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["channelreadstatus"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","oak_abi::policy","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","oak_abi::policy::tag","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","oak_abi::policy","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"hash","oak_abi","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","oak_abi::policy","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","oak_abi::policy::tag","",7,[[["self"],["__h"]]]],[11,"hash","oak_abi::policy","",4,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"encode_raw","","",2,[[["self"],["b"]]]],[11,"merge_field","","",2,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["decodeerror"],["result",["decodeerror"]]]]],[11,"encoded_len","","",2,[[["self"]],["usize"]]],[11,"clear","","",2,[[["self"]]]],[11,"encode_raw","","",3,[[["self"],["b"]]]],[11,"merge_field","","",3,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["decodeerror"],["result",["decodeerror"]]]]],[11,"encoded_len","","",3,[[["self"]],["usize"]]],[11,"clear","","",3,[[["self"]]]],[11,"encode_raw","","",4,[[["self"],["b"]]]],[11,"merge_field","","",4,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["decodeerror"],["result",["decodeerror"]]]]],[11,"encoded_len","","",4,[[["self"]],["usize"]]],[11,"clear","","",4,[[["self"]]]],[11,"encode_raw","","",5,[[["self"],["b"]]]],[11,"merge_field","","",5,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["decodeerror"],["result",["decodeerror"]]]]],[11,"encoded_len","","",5,[[["self"]],["usize"]]],[11,"clear","","",5,[[["self"]]]],[11,"encode_raw","","",6,[[["self"],["b"]]]],[11,"merge_field","","",6,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["decodeerror"],["result",["decodeerror"]]]]],[11,"encoded_len","","",6,[[["self"]],["usize"]]],[11,"clear","","",6,[[["self"]]]],[11,"encode","oak_abi::policy::tag","",7,[[["self"],["b"]]]],[11,"merge","","",7,[[["u32"],["b"],["wiretype"],["decodecontext"],["option"]],[["decodeerror"],["result",["decodeerror"]]]]],[11,"encoded_len","","",7,[[["self"]],["usize"]]]],"p":[[4,"OakStatus"],[4,"ChannelReadStatus"],[3,"Label"],[3,"Tag"],[3,"GrpcTag"],[3,"WebAssemblyModuleTag"],[3,"TlsEndpointTag"],[4,"Tag"]]};
searchIndex["oak_runtime"] = {"doc":"","i":[[3,"Handle","oak_runtime","A reference to a [`Channel`]. Each [`Handle`] has anâ€¦",null,null],[0,"proto","","",null,null],[3,"ApplicationConfiguration","oak_runtime::proto","An ApplicationConfiguration represents a unit ofâ€¦",null,null],[12,"node_configs","","Collection of available Node configurations, indexed byâ€¦",0,null],[12,"initial_node_config_name","","Indication of what configuration the initial Node shouldâ€¦",0,null],[12,"initial_entrypoint_name","","The name of an exported Web Assembly function in theâ€¦",0,null],[12,"grpc_port","","Port number used by the gRPC pseudo-node; must be >= 1024.",0,null],[3,"NodeConfiguration","","NodeConfiguration indicates the configuration of a createdâ€¦",null,null],[12,"name","","",1,null],[12,"config_type","","",1,null],[3,"WebAssemblyConfiguration","","WebAssemblyConfiguration describes the configuration of aâ€¦",null,null],[12,"module_bytes","","The compiled code of the Oak Node, in WebAssembly binaryâ€¦",2,null],[3,"LogConfiguration","","LogConfiguration describes the configuration of a loggingâ€¦",null,null],[3,"StorageProxyConfiguration","","StorageProxyConfiguration describes the configuration of aâ€¦",null,null],[12,"address","","The address of the external storage provider.",3,null],[3,"GrpcServerConfiguration","","GrpcServerConfiguration describes the configuration of aâ€¦",null,null],[12,"address","","The endpoint address for the gRPC server to listen on.â€¦",4,null],[3,"GrpcClientConfiguration","","GrpcClientConfiguration describes the configuration of aâ€¦",null,null],[12,"address","","The endpoint address of the external gRPC service.â€¦",5,null],[0,"node_configuration","","",null,null],[4,"ConfigType","oak_runtime::proto::node_configuration","",null,null],[13,"WasmConfig","","",6,null],[13,"LogConfig","","",6,null],[13,"StorageConfig","","",6,null],[13,"GrpcServerConfig","","",6,null],[13,"GrpcClientConfig","","",6,null],[11,"encode","","",6,[[["self"],["b"]]]],[11,"merge","","",6,[[["u32"],["wiretype"],["b"],["decodecontext"],["option"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",6,[[["self"]],["usize"]]],[0,"log","oak_runtime::proto","",null,null],[3,"LogMessage","oak_runtime::proto::log","This message defines the data that is passed as a logâ€¦",null,null],[12,"file","","The source file containing the message.",7,null],[12,"line","","The line containing the message.",7,null],[12,"level","","The verbosity level of the message.",7,null],[12,"message","","The message body.",7,null],[4,"Level","","Logging levels as defined inâ€¦",null,null],[13,"UnknownLevel","","",8,null],[13,"Error","","",8,null],[13,"Warn","","",8,null],[13,"Info","","",8,null],[13,"Debug","","",8,null],[13,"Trace","","",8,null],[11,"level","","Returns the enum value of `level`, or the default if theâ€¦",7,[[["self"]],["level"]]],[11,"set_level","","Sets `level` to the provided enum value.",7,[[["self"],["level"]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `Level`.",8,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `Level`, or `None` if `value` isâ€¦",8,[[["i32"]],[["option",["level"]],["level"]]]],[0,"config","oak_runtime","",null,null],[5,"application_configuration","oak_runtime::config","Create an application configuration.",null,[[["buildhasher"],["string"],["str"],["vec",["u8"]],["hashmap",["string","vec"]]],["applicationconfiguration"]]],[5,"from_protobuf","","Load a `runtime::Configuration` from a protobufâ€¦",null,[[["applicationconfiguration"]],[["configuration"],["oakstatus"],["result",["configuration","oakstatus"]]]]],[5,"configure_and_run","","Configure a [`Runtime`] from the given protobufâ€¦",null,[[["applicationconfiguration"]],[["oakstatus"],["result",["oakstatus"]]]]],[0,"message","oak_runtime","",null,null],[3,"Message","oak_runtime::message","Encapsulates a message consisting of opaque data bytes andâ€¦",null,null],[12,"data","","",9,null],[12,"channels","","",9,null],[0,"node","oak_runtime","",null,null],[4,"Configuration","oak_runtime::node","A `Configuration` corresponds to an entry from aâ€¦",null,null],[13,"LogNode","","The configuration for a logging pseudo node.",10,null],[13,"GrpcServerNode","","The configuration for a gRPC server pseudo node thatâ€¦",10,null],[12,"address","oak_runtime::node::Configuration","",10,null],[13,"WasmNode","oak_runtime::node","The configuration for a Wasm node.",10,null],[12,"module","oak_runtime::node::Configuration","",10,null],[4,"ConfigurationError","oak_runtime::node","A enumeration for errors occuring when buildingâ€¦",null,null],[13,"AddressParsingError","","",11,null],[13,"IncorrectPort","","",11,null],[13,"WasmiModuleInializationError","","",11,null],[5,"load_wasm","","Loads a Wasm module into a node configuration, returningâ€¦",null,[[],[["configurationerror"],["configuration"],["result",["configuration","configurationerror"]]]]],[5,"check_port","","Checks if port is greater than 1023.",null,[[["socketaddr"]],[["result",["configurationerror"]],["configurationerror"]]]],[8,"Node","","A trait implemented by every node and pseudo-node.",null,null],[10,"start","","Starts executing the node.",12,[[["self"]],[["oakstatus"],["result",["oakstatus"]]]]],[10,"stop","","Stops executing the node.",12,[[["self"]]]],[11,"create_node","","Creates a new node instance corresponding to theâ€¦",10,[[["str"],["runtimeproxy"],["string"],["handle"],["self"]],[["box",["node"]],["node"]]]],[0,"runtime","oak_runtime","",null,null],[3,"Handle","oak_runtime::runtime","A reference to a [`Channel`]. Each [`Handle`] has anâ€¦",null,null],[3,"NodeId","","An identifier for a [`Node`] that is opaque for type safety.",null,null],[3,"Configuration","","",null,null],[12,"nodes","","",13,null],[12,"entry_module","","",13,null],[12,"entrypoint","","",13,null],[3,"Runtime","","Runtime structure for configuring and running a set of Oakâ€¦",null,null],[3,"RuntimeProxy","","A proxy object that binds together a reference to theâ€¦",null,null],[4,"HandleDirection","","The direction of a [`Handle`] can be discovered byâ€¦",null,null],[13,"Read","","",14,null],[13,"Write","","",14,null],[4,"ReadStatus","","A helper type to determine if `try_read_message` wasâ€¦",null,null],[13,"Success","","",15,null],[13,"NeedsCapacity","","",15,null],[17,"TEST_NODE_ID","","For testing use the same reserved identifier to allowâ€¦",null,null],[11,"create","","Creates a [`Runtime`] instance but does not startâ€¦",16,[[["configuration"]],["self"]]],[11,"run","","Configures and runs the protobuf specified Applicationâ€¦",16,[[["arc"]],[["handle"],["result",["handle","oakstatus"]],["oakstatus"]]]],[11,"is_terminating","","Thread safe method for determining if the [`Runtime`] isâ€¦",16,[[["self"]],["bool"]]],[11,"stop","","Thread safe method for signaling termination to aâ€¦",16,[[["self"]]]],[11,"new_channel","","Creates a new [`Channel`] and returns a `(writer handle,â€¦",16,[[["nodeid"],["label"],["self"]]]],[11,"wait_on_channels","","Waits on a slice of `Option<&ChannelReader>`s, blockingâ€¦",16,[[["nodeid"],["self"]],[["oakstatus"],["result",["vec","oakstatus"]],["vec",["channelreadstatus"]]]]],[11,"channel_write","","Write a message to a channel. Fails withâ€¦",16,[[["nodeid"],["handle"],["self"],["message"]],[["oakstatus"],["result",["oakstatus"]]]]],[11,"channel_read","","Thread safe. Read a message from a channel. Fails withâ€¦",16,[[["nodeid"],["handle"],["self"]],[["option",["message"]],["result",["option","oakstatus"]],["oakstatus"]]]],[11,"channel_status","","Thread safe. This function returns: -â€¦",16,[[["nodeid"],["handle"],["self"]],[["channelreadstatus"],["oakstatus"],["result",["channelreadstatus","oakstatus"]]]]],[11,"channel_try_read_message","","Thread safe. Reads a message from the channel ifâ€¦",16,[[["usize"],["nodeid"],["handle"],["self"]],[["oakstatus"],["result",["option","oakstatus"]],["option",["readstatus"]]]]],[11,"channel_get_direction","","Return the direction of a [`Handle`]. This is useful whenâ€¦",16,[[["nodeid"],["handle"],["self"]],[["handledirection"],["oakstatus"],["result",["handledirection","oakstatus"]]]]],[11,"channel_close","","Close a [`Handle`], potentially orphaning the underlyingâ€¦",16,[[["nodeid"],["handle"],["self"]],[["oakstatus"],["result",["oakstatus"]]]]],[11,"remove_node_id","","Remove a [`Node`] by [`NodeId`] from the [`Runtime`].",16,[[["nodeid"],["self"]]]],[11,"node_create","","Thread safe method that attempts to create a node withinâ€¦",16,[[["str"],["arc"],["nodeid"],["label"],["handle"]],[["oakstatus"],["result",["oakstatus"]]]]],[11,"new_runtime_proxy","","",16,[[["arc"]],["runtimeproxy"]]],[11,"is_terminating","","See [`Runtime::is_terminating`].",17,[[["self"]],["bool"]]],[11,"exit_node","","See [`Runtime::remove_node_id`].",17,[[["self"]]]],[11,"node_create","","See [`Runtime::node_create`].",17,[[["str"],["label"],["handle"],["self"]],[["oakstatus"],["result",["oakstatus"]]]]],[11,"channel_create","","See [`Runtime::new_channel`].",17,[[["label"],["self"]]]],[11,"channel_close","","See [`Runtime::channel_close`].",17,[[["handle"],["self"]],[["oakstatus"],["result",["oakstatus"]]]]],[11,"wait_on_channels","","See [`Runtime::wait_on_channels`].",17,[[["self"]],[["oakstatus"],["result",["vec","oakstatus"]],["vec",["channelreadstatus"]]]]],[11,"channel_write","","See [`Runtime::channel_write`].",17,[[["handle"],["self"],["message"]],[["oakstatus"],["result",["oakstatus"]]]]],[11,"channel_read","","See [`Runtime::channel_read`].",17,[[["handle"],["self"]],[["option",["message"]],["result",["option","oakstatus"]],["oakstatus"]]]],[11,"channel_try_read_message","","See [`Runtime::channel_try_read_message`].",17,[[["usize"],["handle"],["self"]],[["oakstatus"],["result",["option","oakstatus"]],["option",["readstatus"]]]]],[11,"channel_get_direction","","See [`Runtime::channel_get_direction`].",17,[[["handle"],["self"]],[["handledirection"],["oakstatus"],["result",["handledirection","oakstatus"]]]]],[11,"from","oak_runtime","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"equivalent","","",18,[[["k"],["self"]],["bool"]]],[11,"from","oak_runtime::proto","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","oak_runtime::proto::node_configuration","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","oak_runtime::proto::log","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"equivalent","","",8,[[["k"],["self"]],["bool"]]],[11,"from","oak_runtime::message","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","oak_runtime::node","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","oak_runtime::runtime","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"equivalent","","",20,[[["k"],["self"]],["bool"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"equivalent","","",14,[[["k"],["self"]],["bool"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","oak_runtime::node","",11,[[["addrparseerror"]],["self"]]],[11,"clone","oak_runtime::proto","",0,[[["self"]],["applicationconfiguration"]]],[11,"clone","","",1,[[["self"]],["nodeconfiguration"]]],[11,"clone","oak_runtime::proto::node_configuration","",6,[[["self"]],["configtype"]]],[11,"clone","oak_runtime::proto","",2,[[["self"]],["webassemblyconfiguration"]]],[11,"clone","","",19,[[["self"]],["logconfiguration"]]],[11,"clone","","",3,[[["self"]],["storageproxyconfiguration"]]],[11,"clone","","",4,[[["self"]],["grpcserverconfiguration"]]],[11,"clone","","",5,[[["self"]],["grpcclientconfiguration"]]],[11,"clone","oak_runtime::proto::log","",7,[[["self"]],["logmessage"]]],[11,"clone","","",8,[[["self"]],["level"]]],[11,"clone","oak_runtime","",18,[[["self"]],["handle"]]],[11,"clone","oak_runtime::runtime","",14,[[["self"]],["handledirection"]]],[11,"clone","","",20,[[["self"]],["nodeid"]]],[11,"clone","","",17,[[["self"]],["runtimeproxy"]]],[11,"default","oak_runtime::proto","",0,[[],["applicationconfiguration"]]],[11,"default","","",1,[[],["nodeconfiguration"]]],[11,"default","","",2,[[],["webassemblyconfiguration"]]],[11,"default","","",19,[[],["logconfiguration"]]],[11,"default","","",3,[[],["storageproxyconfiguration"]]],[11,"default","","",4,[[],["grpcserverconfiguration"]]],[11,"default","","",5,[[],["grpcclientconfiguration"]]],[11,"default","oak_runtime::proto::log","",7,[[],["logmessage"]]],[11,"default","","",8,[[],["level"]]],[11,"cmp","","",8,[[["self"],["level"]],["ordering"]]],[11,"eq","oak_runtime::proto","",0,[[["self"],["applicationconfiguration"]],["bool"]]],[11,"ne","","",0,[[["self"],["applicationconfiguration"]],["bool"]]],[11,"eq","","",1,[[["self"],["nodeconfiguration"]],["bool"]]],[11,"ne","","",1,[[["self"],["nodeconfiguration"]],["bool"]]],[11,"eq","oak_runtime::proto::node_configuration","",6,[[["self"],["configtype"]],["bool"]]],[11,"ne","","",6,[[["self"],["configtype"]],["bool"]]],[11,"eq","oak_runtime::proto","",2,[[["webassemblyconfiguration"],["self"]],["bool"]]],[11,"ne","","",2,[[["webassemblyconfiguration"],["self"]],["bool"]]],[11,"eq","","",19,[[["self"],["logconfiguration"]],["bool"]]],[11,"eq","","",3,[[["storageproxyconfiguration"],["self"]],["bool"]]],[11,"ne","","",3,[[["storageproxyconfiguration"],["self"]],["bool"]]],[11,"eq","","",4,[[["grpcserverconfiguration"],["self"]],["bool"]]],[11,"ne","","",4,[[["grpcserverconfiguration"],["self"]],["bool"]]],[11,"eq","","",5,[[["grpcclientconfiguration"],["self"]],["bool"]]],[11,"ne","","",5,[[["grpcclientconfiguration"],["self"]],["bool"]]],[11,"eq","oak_runtime::proto::log","",7,[[["logmessage"],["self"]],["bool"]]],[11,"ne","","",7,[[["logmessage"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["level"]],["bool"]]],[11,"eq","oak_runtime","",18,[[["self"],["handle"]],["bool"]]],[11,"ne","","",18,[[["self"],["handle"]],["bool"]]],[11,"eq","oak_runtime::runtime","",14,[[["handledirection"],["self"]],["bool"]]],[11,"eq","","",20,[[["self"],["nodeid"]],["bool"]]],[11,"ne","","",20,[[["self"],["nodeid"]],["bool"]]],[11,"partial_cmp","oak_runtime::proto::log","",8,[[["self"],["level"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","oak_runtime::proto","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","oak_runtime::proto::node_configuration","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","oak_runtime::proto","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","oak_runtime::proto::log","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","oak_runtime::message","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","oak_runtime::node","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","oak_runtime","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","oak_runtime::runtime","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","oak_runtime::node","",11,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"hash","oak_runtime::proto::log","",8,[[["self"],["__h"]]]],[11,"hash","oak_runtime","",18,[[["self"],["__h"]]]],[11,"hash","oak_runtime::runtime","",14,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"encode_raw","oak_runtime::proto","",0,[[["self"],["b"]]]],[11,"merge_field","","",0,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",0,[[["self"]],["usize"]]],[11,"clear","","",0,[[["self"]]]],[11,"encode_raw","","",1,[[["self"],["b"]]]],[11,"merge_field","","",1,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",1,[[["self"]],["usize"]]],[11,"clear","","",1,[[["self"]]]],[11,"encode_raw","","",2,[[["self"],["b"]]]],[11,"merge_field","","",2,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",2,[[["self"]],["usize"]]],[11,"clear","","",2,[[["self"]]]],[11,"encode_raw","","",19,[[["self"],["b"]]]],[11,"merge_field","","",19,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",19,[[["self"]],["usize"]]],[11,"clear","","",19,[[["self"]]]],[11,"encode_raw","","",3,[[["self"],["b"]]]],[11,"merge_field","","",3,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",3,[[["self"]],["usize"]]],[11,"clear","","",3,[[["self"]]]],[11,"encode_raw","","",4,[[["self"],["b"]]]],[11,"merge_field","","",4,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",4,[[["self"]],["usize"]]],[11,"clear","","",4,[[["self"]]]],[11,"encode_raw","","",5,[[["self"],["b"]]]],[11,"merge_field","","",5,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",5,[[["self"]],["usize"]]],[11,"clear","","",5,[[["self"]]]],[11,"encode_raw","oak_runtime::proto::log","",7,[[["self"],["b"]]]],[11,"merge_field","","",7,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",7,[[["self"]],["usize"]]],[11,"clear","","",7,[[["self"]]]]],"p":[[3,"ApplicationConfiguration"],[3,"NodeConfiguration"],[3,"WebAssemblyConfiguration"],[3,"StorageProxyConfiguration"],[3,"GrpcServerConfiguration"],[3,"GrpcClientConfiguration"],[4,"ConfigType"],[3,"LogMessage"],[4,"Level"],[3,"Message"],[4,"Configuration"],[4,"ConfigurationError"],[8,"Node"],[3,"Configuration"],[4,"HandleDirection"],[4,"ReadStatus"],[3,"Runtime"],[3,"RuntimeProxy"],[3,"Handle"],[3,"LogConfiguration"],[3,"NodeId"]]};
searchIndex["oak_tests"] = {"doc":"Test utilities to help with unit testing of Oak SDK code.","i":[[5,"compile_rust_wasm","oak_tests","Uses cargo to compile a Rust manifest to Wasm bytes.",null,[[["str"]],[["vec",["u8"]],["result",["vec"]]]]],[5,"run_single_module_default","","Convenience helper to build and run a single-Nodeâ€¦",null,[[["str"]],[["result",["oakstatus"]],["oakstatus"]]]],[5,"run_single_module","","Convenience helper to build and run a single-Nodeâ€¦",null,[[["str"]],[["result",["oakstatus"]],["oakstatus"]]]],[5,"grpc_request","","",null,[[["str"],["r"],["handle"],["runtime"]],["result"]]]],"p":[]};
searchIndex["oak_utils"] = {"doc":"","i":[[5,"run_protoc_rust","oak_utils","",null,[[["args"]],["result"]]],[5,"run_protoc_rust_grpc","","",null,[[["args"]],["result"]]]],"p":[]};
searchIndex["private_set_intersection"] = {"doc":"Private Set Intersection example for Project Oak.","i":[[5,"oak_main","private_set_intersection","",null,[[["u64"]]]]],"p":[]};
searchIndex["protoc_gen_rust_grpc"] = {"doc":"","i":[[5,"main","protoc_gen_rust_grpc","",null,[[]]]],"p":[]};
searchIndex["protoc_rust_grpc"] = {"doc":"","i":[[3,"Args","protoc_rust_grpc","",null,null],[12,"out_dir","","--lang_out= param",0,null],[12,"includes","","-I args",0,null],[12,"input","","List of .proto files to compile",0,null],[12,"rust_protobuf","","Generate rust-protobuf files along with rust-gprc",0,null],[12,"rust_protobuf_customize","","Customize rust-protobuf codegen",0,null],[5,"run","","",null,[[["args"]],["result"]]],[6,"Error","","",null,null],[6,"Result","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"default","","",0,[[],["args"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Args"]]};
searchIndex["runner"] = {"doc":"A utility binary to run tests and orchestrate examples andâ€¦","i":[[5,"main","runner","",null,[[],[["result",["box"]],["box",["error"]]]]],[5,"is_ignored_path","","Return whether to ignore the specified path. This is usedâ€¦",null,[[["pathbuf"]],["bool"]]],[5,"is_ignored_entry","","",null,[[["direntry"]],["bool"]]],[5,"source_files","","Return an iterator of all the first-party and non-ignoredâ€¦",null,[[]]],[5,"workspace_manifest_files","","Return an iterator of all known Cargo Manifest files thatâ€¦",null,[[]]],[5,"is_bazel_file","","Return whether the provided path refers to a Bazel fileâ€¦",null,[[["pathbuf"]],["bool"]]],[5,"is_markdown_file","","Return whether the provided path refers to a markdown fileâ€¦",null,[[["pathbuf"]],["bool"]]],[5,"is_cargo_toml_file","","Return whether the provided path refers to a `Cargo.toml`â€¦",null,[[["pathbuf"]],["bool"]]],[5,"is_cargo_workspace_file","","Return whether the provided path refers to aâ€¦",null,[[["pathbuf"]],["bool"]]],[5,"run_buildifier","","",null,[[],["step"]]],[5,"run_prettier","","",null,[[],["step"]]],[5,"run_embedmd","","",null,[[],["step"]]],[5,"run_cargo_fmt","","",null,[[],["step"]]],[5,"run_cargo_test","","",null,[[],["step"]]],[5,"run_cargo_doc_test","","",null,[[],["step"]]],[5,"run_cargo_clippy","","",null,[[],["step"]]],[5,"run_bazel_build","","",null,[[],["step"]]],[5,"run_bazel_test","","",null,[[],["step"]]],[5,"to_string","","",null,[[["pathbuf"]],["string"]]],[0,"internal","","",null,null],[3,"Opt","runner::internal","",null,null],[12,"dry_run","","",0,null],[12,"commands","","",0,null],[12,"logs","","",0,null],[3,"Context","","Encapsulates all the local state relative to a step, andâ€¦",null,null],[12,"opt","","",1,null],[12,"prefix","","",1,null],[3,"SingleStatusResult","","",null,null],[12,"value","","",2,null],[12,"command","","",2,null],[12,"logs","","",2,null],[3,"Cmd","","A single command that implements the `Runnable` trait.",null,null],[12,"executable","","",3,null],[12,"args","","",3,null],[4,"StatusResultValue","","The outcome of an individual step of execution.",null,null],[13,"Ok","","",4,null],[13,"Error","","",4,null],[13,"Skipped","","",4,null],[4,"Step","","An execution step, which may be a single (dynamicallyâ€¦",null,null],[13,"Single","","",5,null],[12,"name","runner::internal::Step","",5,null],[12,"runnable","","",5,null],[13,"Multiple","runner::internal","",5,null],[12,"name","runner::internal::Step","",5,null],[12,"steps","","",5,null],[5,"values_to_string","runner::internal","",null,[[["t"]],["string"]]],[5,"run_step","","Run the provided step, printing out information about theâ€¦",null,[[["context"],["step"]],[["statusresultvalue"],["hashset",["statusresultvalue"]]]]],[5,"cmd","","Convenience constructor for a boxed `Cmd`.",null,[[["str"]],[["runnable"],["box",["runnable"]]]]],[8,"Runnable","","A runnable task which produces a single result.",null,null],[10,"run","","",6,[[["opt"],["self"]],["singlestatusresult"]]],[11,"root","","",1,[[["opt"]],["self"]]],[11,"child","","",1,[[["str"],["self"]],["self"]]],[11,"new","","",3,[[["str"]],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"run","","Run the provided command, printing a status message withâ€¦",3,[[["opt"],["self"]],["singlestatusresult"]]],[11,"clone","","",0,[[["self"]],["opt"]]],[11,"clone","","",4,[[["self"]],["statusresultvalue"]]],[11,"eq","","",4,[[["self"],["statusresultvalue"]],["bool"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"clap","","",0,[[],["app"]]],[11,"from_clap","","",0,[[["argmatches"]],["self"]]],[11,"augment_clap","","",0,[[["app"]],["app"]]],[11,"is_subcommand","","",0,[[],["bool"]]]],"p":[[3,"Opt"],[3,"Context"],[3,"SingleStatusResult"],[3,"Cmd"],[4,"StatusResultValue"],[4,"Step"],[8,"Runnable"]]};
searchIndex["running_average"] = {"doc":"Running average example for Project Oak.","i":[[5,"oak_main","running_average","",null,[[["u64"]]]]],"p":[]};
searchIndex["rustfmt"] = {"doc":"","i":[[5,"oak_main","rustfmt","",null,[[["u64"]]]]],"p":[]};
searchIndex["split_grpc_client"] = {"doc":"","i":[[5,"main","split_grpc_client","",null,[[],[["result",["box"]],["box",["error"]]]]],[0,"proto","","",null,null],[3,"HelloRequest","split_grpc_client::proto","",null,null],[12,"greeting","","",0,null],[3,"HelloResponse","","",null,null],[12,"reply","","",1,null],[0,"hello_world_client","","Generated client implementations.",null,null],[3,"HelloWorldClient","split_grpc_client::proto::hello_world_client","As seen in https://grpc.io/docs/guides/concepts/.",null,null],[12,"inner","","",2,null],[11,"connect","","Attempt to create a new client by connecting to a givenâ€¦",2,[[["d"]]]],[11,"new","","",2,[[["t"]],["self"]]],[11,"with_interceptor","","",2,[[["t"]],["self"]]],[11,"say_hello","","",2,[[["self"]]]],[11,"lots_of_replies","","",2,[[["self"]]]],[11,"lots_of_greetings","","",2,[[["self"]]]],[11,"bidi_hello","","",2,[[["self"]]]],[11,"from","split_grpc_client::proto","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"into_request","","",0,[[],["request"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"into_request","","",1,[[],["request"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","split_grpc_client::proto::hello_world_client","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"into_request","","",2,[[],["request"]]],[11,"vzip","","",2,[[],["v"]]],[11,"clone","split_grpc_client::proto","",0,[[["self"]],["hellorequest"]]],[11,"clone","","",1,[[["self"]],["helloresponse"]]],[11,"clone","split_grpc_client::proto::hello_world_client","",2,[[["self"]],["self"]]],[11,"default","split_grpc_client::proto","",0,[[],["hellorequest"]]],[11,"default","","",1,[[],["helloresponse"]]],[11,"eq","","",0,[[["self"],["hellorequest"]],["bool"]]],[11,"ne","","",0,[[["self"],["hellorequest"]],["bool"]]],[11,"eq","","",1,[[["helloresponse"],["self"]],["bool"]]],[11,"ne","","",1,[[["helloresponse"],["self"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"encode_raw","","",0,[[["self"],["b"]]]],[11,"merge_field","","",0,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",0,[[["self"]],["usize"]]],[11,"clear","","",0,[[["self"]]]],[11,"encode_raw","","",1,[[["self"],["b"]]]],[11,"merge_field","","",1,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",1,[[["self"]],["usize"]]],[11,"clear","","",1,[[["self"]]]]],"p":[[3,"HelloRequest"],[3,"HelloResponse"],[3,"HelloWorldClient"]]};
searchIndex["split_grpc_proxy"] = {"doc":"","i":[[5,"main","split_grpc_proxy","",null,[[],["result"]]],[5,"proxy","","",null,[[["tcplistener"]]]],[5,"handle_connection","","",null,[[["tcpstream"]]]]],"p":[]};
searchIndex["split_grpc_server"] = {"doc":"","i":[[3,"HelloWorldHandler","split_grpc_server","",null,null],[5,"main","","",null,[[],[["result",["box"]],["box",["error"]]]]],[0,"proto","","",null,null],[3,"HelloRequest","split_grpc_server::proto","",null,null],[12,"greeting","","",0,null],[3,"HelloResponse","","",null,null],[12,"reply","","",1,null],[0,"hello_world_server","","Generated server implementations.",null,null],[3,"_Inner","split_grpc_server::proto::hello_world_server","",null,null],[12,"0","","",2,null],[12,"1","","",2,null],[8,"HelloWorld","","Generated trait containing gRPC methods that should beâ€¦",null,null],[10,"say_hello","","",3,[[["self"],["hellorequest"],["request",["hellorequest"]]],[["box",["future"]],["pin",["box"]]]]],[16,"LotsOfRepliesStream","","Server streaming response type for the LotsOfReplies method.",3,null],[10,"lots_of_replies","","",3,[[["self"],["hellorequest"],["request",["hellorequest"]]],[["pin",["box"]],["box",["future"]]]]],[10,"lots_of_greetings","","",3,[[["request",["streaming"]],["self"],["streaming",["hellorequest"]]],[["box",["future"]],["pin",["box"]]]]],[16,"BidiHelloStream","","Server streaming response type for the BidiHello method.",3,null],[10,"bidi_hello","","",3,[[["request",["streaming"]],["self"],["streaming",["hellorequest"]]],[["pin",["box"]],["box",["future"]]]]],[11,"from","split_grpc_server","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"into_request","","",4,[[],["request"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","split_grpc_server::proto","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"into_request","","",0,[[],["request"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"into_request","","",1,[[],["request"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","split_grpc_server::proto::hello_world_server","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"into_request","","",2,[[],["request"]]],[11,"vzip","","",2,[[],["v"]]],[11,"say_hello","split_grpc_server","",4,[[["self"],["request",["hellorequest"]],["hellorequest"]],[["box",["future"]],["pin",["box"]]]]],[11,"lots_of_replies","","",4,[[["self"],["request",["hellorequest"]],["hellorequest"]],[["pin",["box"]],["box",["future"]]]]],[11,"lots_of_greetings","","",4,[[["self"],["streaming",["hellorequest"]],["request",["streaming"]]],[["box",["future"]],["pin",["box"]]]]],[11,"bidi_hello","","",4,[[["self"],["streaming",["hellorequest"]],["request",["streaming"]]],[["pin",["box"]],["box",["future"]]]]],[11,"clone","split_grpc_server::proto","",0,[[["self"]],["hellorequest"]]],[11,"clone","","",1,[[["self"]],["helloresponse"]]],[11,"clone","split_grpc_server::proto::hello_world_server","",2,[[["self"]],["self"]]],[11,"default","split_grpc_server::proto","",0,[[],["hellorequest"]]],[11,"default","","",1,[[],["helloresponse"]]],[11,"default","split_grpc_server","",4,[[],["helloworldhandler"]]],[11,"eq","split_grpc_server::proto","",0,[[["hellorequest"],["self"]],["bool"]]],[11,"ne","","",0,[[["hellorequest"],["self"]],["bool"]]],[11,"eq","","",1,[[["helloresponse"],["self"]],["bool"]]],[11,"ne","","",1,[[["helloresponse"],["self"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","split_grpc_server::proto::hello_world_server","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","split_grpc_server","",4,[[["formatter"],["self"]],["result"]]],[11,"encode_raw","split_grpc_server::proto","",0,[[["self"],["b"]]]],[11,"merge_field","","",0,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",0,[[["self"]],["usize"]]],[11,"clear","","",0,[[["self"]]]],[11,"encode_raw","","",1,[[["self"],["b"]]]],[11,"merge_field","","",1,[[["u32"],["b"],["wiretype"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",1,[[["self"]],["usize"]]],[11,"clear","","",1,[[["self"]]]]],"p":[[3,"HelloRequest"],[3,"HelloResponse"],[3,"_Inner"],[8,"HelloWorld"],[3,"HelloWorldHandler"]]};
searchIndex["translator"] = {"doc":"","i":[[5,"oak_main","translator","",null,[[["u64"]]]]],"p":[]};
searchIndex["translator_common"] = {"doc":"","i":[[5,"translate","translator_common","",null,[[["str"],["translatorclient"]],[["string"],["option",["string"]]]]],[0,"proto","","",null,null],[0,"translator","translator_common::proto","Generated file from `translator.proto`",null,null],[3,"TranslateRequest","translator_common::proto::translator","Generated files are compatible only with the same versionâ€¦",null,null],[12,"text","","",0,null],[12,"from_lang","","",0,null],[12,"to_lang","","",0,null],[12,"unknown_fields","","",0,null],[12,"cached_size","","",0,null],[3,"TranslateResponse","","",null,null],[12,"translated_text","","",1,null],[12,"unknown_fields","","",1,null],[12,"cached_size","","",1,null],[5,"file_descriptor_proto","","",null,[[],["filedescriptorproto"]]],[11,"new","","",0,[[],["translaterequest"]]],[11,"get_text","","",0,[[["self"]],["str"]]],[11,"clear_text","","",0,[[["self"]]]],[11,"set_text","","",0,[[["self"],["string"]]]],[11,"mut_text","","",0,[[["self"]],["string"]]],[11,"take_text","","",0,[[["self"]],["string"]]],[11,"get_from_lang","","",0,[[["self"]],["str"]]],[11,"clear_from_lang","","",0,[[["self"]]]],[11,"set_from_lang","","",0,[[["self"],["string"]]]],[11,"mut_from_lang","","",0,[[["self"]],["string"]]],[11,"take_from_lang","","",0,[[["self"]],["string"]]],[11,"get_to_lang","","",0,[[["self"]],["str"]]],[11,"clear_to_lang","","",0,[[["self"]]]],[11,"set_to_lang","","",0,[[["self"],["string"]]]],[11,"mut_to_lang","","",0,[[["self"]],["string"]]],[11,"take_to_lang","","",0,[[["self"]],["string"]]],[11,"new","","",1,[[],["translateresponse"]]],[11,"get_translated_text","","",1,[[["self"]],["str"]]],[11,"clear_translated_text","","",1,[[["self"]]]],[11,"set_translated_text","","",1,[[["self"],["string"]]]],[11,"mut_translated_text","","",1,[[["self"]],["string"]]],[11,"take_translated_text","","",1,[[["self"]],["string"]]],[0,"translator_grpc","translator_common::proto","",null,null],[3,"Dispatcher","translator_common::proto::translator_grpc","",null,null],[3,"TranslatorClient","","",null,null],[12,"0","","",2,null],[8,"Translator","","",null,null],[10,"translate","","",3,[[["self"],["translaterequest"]],[["result",["translateresponse"]],["translateresponse"]]]],[11,"new","","",4,[[["t"]],["dispatcher"]]],[11,"translate","","",2,[[["self"],["translaterequest"]],[["result",["translateresponse"]],["translateresponse"]]]],[11,"from","translator_common::proto::translator","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"decode","","",0,[[["message"]],[["result",["oakerror"]],["oakerror"]]]],[11,"encode","","",0,[[["self"]],[["oakerror"],["result",["message","oakerror"]],["message"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"decode","","",1,[[["message"]],[["result",["oakerror"]],["oakerror"]]]],[11,"encode","","",1,[[["self"]],[["oakerror"],["result",["message","oakerror"]],["message"]]]],[11,"from","translator_common::proto::translator_grpc","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"handle_command","","Handle incoming gRPC events for an [`ServerNode`].",4,[[["self"],["invocation"]],[["result",["oakerror"]],["oakerror"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"clone","translator_common::proto::translator","",0,[[["self"]],["translaterequest"]]],[11,"clone","","",1,[[["self"]],["translateresponse"]]],[11,"default","","",0,[[],["translaterequest"]]],[11,"default","","",1,[[],["translateresponse"]]],[11,"eq","","",0,[[["translaterequest"],["self"]],["bool"]]],[11,"ne","","",0,[[["translaterequest"],["self"]],["bool"]]],[11,"eq","","",1,[[["translateresponse"],["self"]],["bool"]]],[11,"ne","","",1,[[["translateresponse"],["self"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"is_initialized","","",0,[[["self"]],["bool"]]],[11,"merge_from","","",0,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",0,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",0,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",0,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",0,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",0,[[["self"]],["unknownfields"]]],[11,"as_any","","",0,[[["self"]],["any"]]],[11,"as_any_mut","","",0,[[["self"]],["any"]]],[11,"into_any","","",0,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",0,[[["self"]],["messagedescriptor"]]],[11,"new","","",0,[[],["translaterequest"]]],[11,"descriptor_static","","",0,[[],["messagedescriptor"]]],[11,"default_instance","","",0,[[],["translaterequest"]]],[11,"is_initialized","","",1,[[["self"]],["bool"]]],[11,"merge_from","","",1,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",1,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",1,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",1,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",1,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",1,[[["self"]],["unknownfields"]]],[11,"as_any","","",1,[[["self"]],["any"]]],[11,"as_any_mut","","",1,[[["self"]],["any"]]],[11,"into_any","","",1,[[["box"]],[["box",["any"]],["any"]]]],[11,"descriptor","","",1,[[["self"]],["messagedescriptor"]]],[11,"new","","",1,[[],["translateresponse"]]],[11,"descriptor_static","","",1,[[],["messagedescriptor"]]],[11,"default_instance","","",1,[[],["translateresponse"]]],[11,"clear","","",0,[[["self"]]]],[11,"clear","","",1,[[["self"]]]],[11,"as_ref","","",0,[[["self"]],["protobufvalueref"]]],[11,"as_ref","","",1,[[["self"]],["protobufvalueref"]]],[11,"invoke","translator_common::proto::translator_grpc","",4,[[["str"],["self"],["channelresponsewriter"]]]]],"p":[[3,"TranslateRequest"],[3,"TranslateResponse"],[3,"TranslatorClient"],[8,"Translator"],[3,"Dispatcher"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);
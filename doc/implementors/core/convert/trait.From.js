(function() {var implementors = {};
implementors["oak"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ProtobufError&gt; for <a class=\"enum\" href=\"oak/enum.OakError.html\" title=\"enum oak::OakError\">OakError</a>","synthetic":false,"types":["oak::error::OakError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"oak/enum.OakError.html\" title=\"enum oak::OakError\">OakError</a>","synthetic":false,"types":["oak::error::OakError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"oak/enum.OakStatus.html\" title=\"enum oak::OakStatus\">OakStatus</a>&gt; for <a class=\"enum\" href=\"oak/enum.OakError.html\" title=\"enum oak::OakError\">OakError</a>","synthetic":false,"types":["oak::error::OakError"]}];
implementors["oak_abi"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"oak_abi/proto/enum.OakStatus.html\" title=\"enum oak_abi::proto::OakStatus\">OakStatus</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"oak_abi/proto/enum.ChannelReadStatus.html\" title=\"enum oak_abi::proto::ChannelReadStatus\">ChannelReadStatus</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()